<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="of_quaternion_8cpp" kind="file">
    <compoundname>ofQuaternion.cpp</compoundname>
    <includes refid="of_quaternion_8h" local="yes">ofQuaternion.h</includes>
    <includes refid="of_matrix4x4_8h" local="yes">ofMatrix4x4.h</includes>
    <includes refid="of_math_8h" local="yes">ofMath.h</includes>
    <incdepgraph>
      <node id="3212">
        <label>iomanip</label>
      </node>
      <node id="3195">
        <label>ofQuaternion.h</label>
        <link refid="of_quaternion_8h"/>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3214" relation="include">
        </childnode>
        <childnode refid="3216" relation="include">
        </childnode>
        <childnode refid="3205" relation="include">
        </childnode>
      </node>
      <node id="3216">
        <label>ofVec4f.h</label>
        <link refid="of_vec4f_8h"/>
        <childnode refid="3196" relation="include">
        </childnode>
      </node>
      <node id="3200">
        <label>GL/glx.h</label>
      </node>
      <node id="3215">
        <label>ofVec2f.h</label>
        <link refid="of_vec2f_8h"/>
        <childnode refid="3196" relation="include">
        </childnode>
      </node>
      <node id="3205">
        <label>cmath</label>
      </node>
      <node id="3214">
        <label>ofVec3f.h</label>
        <link refid="of_vec3f_8h"/>
        <childnode refid="3215" relation="include">
        </childnode>
        <childnode refid="3216" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3205" relation="include">
        </childnode>
        <childnode refid="3208" relation="include">
        </childnode>
      </node>
      <node id="3207">
        <label>string</label>
      </node>
      <node id="3204">
        <label>cstdarg</label>
      </node>
      <node id="3198">
        <label>GL/glew.h</label>
      </node>
      <node id="3201">
        <label>tesselator.h</label>
      </node>
      <node id="3213">
        <label>fstream</label>
      </node>
      <node id="3194">
        <label>math/ofQuaternion.cpp</label>
        <link refid="ofQuaternion.cpp"/>
        <childnode refid="3195" relation="include">
        </childnode>
        <childnode refid="3217" relation="include">
        </childnode>
        <childnode refid="3218" relation="include">
        </childnode>
      </node>
      <node id="3218">
        <label>ofMath.h</label>
        <link refid="of_math_8h"/>
        <childnode refid="3219" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
      </node>
      <node id="3203">
        <label>cstdio</label>
      </node>
      <node id="3206">
        <label>ctime</label>
      </node>
      <node id="3197">
        <label>unistd.h</label>
      </node>
      <node id="3209">
        <label>vector</label>
      </node>
      <node id="3196">
        <label>ofConstants.h</label>
        <link refid="of_constants_8h"/>
        <childnode refid="3197" relation="include">
        </childnode>
        <childnode refid="3198" relation="include">
        </childnode>
        <childnode refid="3199" relation="include">
        </childnode>
        <childnode refid="3200" relation="include">
        </childnode>
        <childnode refid="3201" relation="include">
        </childnode>
        <childnode refid="3202" relation="include">
        </childnode>
        <childnode refid="3203" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
        <childnode refid="3205" relation="include">
        </childnode>
        <childnode refid="3206" relation="include">
        </childnode>
        <childnode refid="3207" relation="include">
        </childnode>
        <childnode refid="3208" relation="include">
        </childnode>
        <childnode refid="3209" relation="include">
        </childnode>
        <childnode refid="3210" relation="include">
        </childnode>
        <childnode refid="3211" relation="include">
        </childnode>
        <childnode refid="3212" relation="include">
        </childnode>
        <childnode refid="3213" relation="include">
        </childnode>
      </node>
      <node id="3211">
        <label>sstream</label>
      </node>
      <node id="3219">
        <label>ofPoint.h</label>
        <link refid="of_point_8h"/>
        <childnode refid="3214" relation="include">
        </childnode>
      </node>
      <node id="3217">
        <label>ofMatrix4x4.h</label>
        <link refid="of_matrix4x4_8h"/>
        <childnode refid="3214" relation="include">
        </childnode>
        <childnode refid="3216" relation="include">
        </childnode>
        <childnode refid="3195" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3205" relation="include">
        </childnode>
      </node>
      <node id="3202">
        <label>cstdlib</label>
      </node>
      <node id="3208">
        <label>iostream</label>
      </node>
      <node id="3199">
        <label>GL/gl.h</label>
      </node>
      <node id="3210">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="of_quaternion_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" prot="public" static="no">
        <name>QX</name>
        <initializer>_v.x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp" line="292" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_quaternion_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" prot="public" static="no">
        <name>QY</name>
        <initializer>_v.y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp" line="293" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_quaternion_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" prot="public" static="no">
        <name>QZ</name>
        <initializer>_v.z</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp" line="294" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_quaternion_8cpp_1a02b7c35a051ef13230cdb4a51609543f" prot="public" static="no">
        <name>QW</name>
        <initializer>_v.w</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp" line="295" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="of_quaternion_8h" kindref="compound">ofQuaternion.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="of_matrix4x4_8h" kindref="compound">ofMatrix4x4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="of_math_8h" kindref="compound">ofMath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1aaea1c7238849deac834b9a6396c5017f" kindref="member">ofQuaternion::set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>matrix)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>matrix.<ref refid="classof_matrix4x4_1a421494de45410607d28f0da9ca413001" kindref="member">getRotate</ref>();</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a8fd7a5fdcfbea7c7eb075eb0656cb087" kindref="member">ofQuaternion::get</ref>(<ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>matrix)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix.<ref refid="classof_matrix4x4_1a2b624fa64ef1b27199129c9e9cf9d6d5" kindref="member">makeRotationMatrix</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">ofQuaternion::makeRotate</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/><ref refid="of_math_8cpp_1a70a120b33471d10ce0e755ee43c32b25" kindref="member">ofDegToRad</ref>(angle);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0.0000001f;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1af57e2004c17df8531fb171c6faa0770b" kindref="member">length</ref><sp/>=<sp/>sqrtf(<sp/>x<sp/>*<sp/>x<sp/>+<sp/>y<sp/>*<sp/>y<sp/>+<sp/>z<sp/>*<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>~zero<sp/>length<sp/>axis,<sp/>so<sp/>reset<sp/>rotation<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classof_quaternion_1a88872fa61612eb7763ad4e2195775c71" kindref="member">ofQuaternion</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inversenorm<sp/><sp/>=<sp/>1.0f<sp/>/<sp/><ref refid="classof_quaternion_1af57e2004c17df8531fb171c6faa0770b" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>coshalfangle<sp/>=<sp/>cosf(<sp/>0.5f<sp/>*<sp/>angle<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinhalfangle<sp/>=<sp/>sinf(<sp/>0.5f<sp/>*<sp/>angle<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>=<sp/>x<sp/>*<sp/>sinhalfangle<sp/>*<sp/>inversenorm;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>=<sp/>y<sp/>*<sp/>sinhalfangle<sp/>*<sp/>inversenorm;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>=<sp/>z<sp/>*<sp/>sinhalfangle<sp/>*<sp/>inversenorm;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a0b55d23e9fa321c34a60752605c19bae" kindref="member">w</ref><sp/>=<sp/>coshalfangle;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">ofQuaternion::makeRotate</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>vec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(<sp/>angle,<sp/>vec.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>,<sp/>vec.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>,<sp/>vec.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref><sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">ofQuaternion::makeRotate</ref><sp/>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>axis1,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>axis2,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>axis3)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q1;<sp/>q1.<ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(angle1,axis1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q2;<sp/>q2.<ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(angle2,axis2);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q3;<sp/>q3.<ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(angle3,axis3);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>q1*q2*q3;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">ofQuaternion::makeRotate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>to<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>routine<sp/>takes<sp/>any<sp/>vector<sp/>as<sp/>argument<sp/>but<sp/>normalized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vectors<sp/>are<sp/>necessary,<sp/>if<sp/>only<sp/>for<sp/>computing<sp/>the<sp/>dot<sp/>product.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>bad<sp/>the<sp/>API<sp/>is<sp/>that<sp/>generic,<sp/>it<sp/>leads<sp/>to<sp/>performance<sp/>loss.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>in<sp/>the<sp/>case<sp/>the<sp/>2<sp/>vectors<sp/>are<sp/>not<sp/>normalized<sp/>but<sp/>same<sp/>length,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>sqrt<sp/>could<sp/>be<sp/>shared,<sp/>but<sp/>we<sp/>have<sp/>no<sp/>way<sp/>to<sp/>know<sp/>beforehand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>this<sp/>point,<sp/>while<sp/>the<sp/>caller<sp/>may<sp/>know.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So,<sp/>we<sp/>have<sp/>to<sp/>test...<sp/>in<sp/>the<sp/>hope<sp/>of<sp/>saving<sp/>at<sp/>least<sp/>a<sp/>sqrt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>sourceVector<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>targetVector<sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fromLen2<sp/>=<sp/>from.<ref refid="classof_vec3f_1a75342dc9358676de78727817b7f944c2" kindref="member">lengthSquared</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fromLen;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>only<sp/>when<sp/>necessary,<sp/>epsilon<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fromLen2<sp/>&lt;<sp/>1.0<sp/>-<sp/>1e-7)<sp/>||<sp/>(fromLen2<sp/>&gt;<sp/>1.0<sp/>+<sp/>1e-7))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromLen<sp/>=<sp/>sqrt(fromLen2);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceVector<sp/>/=<sp/>fromLen;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fromLen<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>toLen2<sp/>=<sp/>to.<ref refid="classof_vec3f_1a75342dc9358676de78727817b7f944c2" kindref="member">lengthSquared</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>only<sp/>when<sp/>necessary,<sp/>epsilon<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((toLen2<sp/>&lt;<sp/>1.0<sp/>-<sp/>1e-7)<sp/>||<sp/>(toLen2<sp/>&gt;<sp/>1.0<sp/>+<sp/>1e-7))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>toLen;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-use<sp/>fromLen<sp/>for<sp/>case<sp/>of<sp/>mapping<sp/>2<sp/>vectors<sp/>of<sp/>the<sp/>same<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((toLen2<sp/>&gt;<sp/>fromLen2<sp/>-<sp/>1e-7)<sp/>&amp;&amp;<sp/>(toLen2<sp/>&lt;<sp/>fromLen2<sp/>+<sp/>1e-7))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toLen<sp/>=<sp/>fromLen;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>toLen<sp/>=<sp/>sqrt(toLen2);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetVector<sp/>/=<sp/>toLen;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>let&apos;s<sp/>get<sp/>into<sp/>the<sp/>real<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>&quot;dot<sp/>product<sp/>plus<sp/>one&quot;<sp/>as<sp/>test<sp/>as<sp/>it<sp/>can<sp/>be<sp/>re-used<sp/>later<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dotProdPlus1<sp/>=<sp/>1.0<sp/>+<sp/>sourceVector.<ref refid="classof_vec3f_1ade3c568b869e9d83a4c2cc8d102c1c98" kindref="member">dot</ref>(targetVector);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>degenerate<sp/>case<sp/>of<sp/>full<sp/>u-turn.<sp/>Use<sp/>epsilon<sp/>for<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dotProdPlus1<sp/>&lt;<sp/>1e-7)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>orthogonal<sp/>vector<sp/>of<sp/>the<sp/>given<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>plane<sp/>with<sp/>maximum<sp/>vector<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>use<sp/>it<sp/>as<sp/>quaternion<sp/>axis<sp/>with<sp/>pi<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trick<sp/>is<sp/>to<sp/>realize<sp/>one<sp/>value<sp/>at<sp/>least<sp/>is<sp/>&gt;0.6<sp/>for<sp/>a<sp/>normalized<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(sourceVector.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>)<sp/>&lt;<sp/>0.6)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref><sp/>=<sp/>sqrt(1.0<sp/>-<sp/>sourceVector.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref><sp/>*<sp/>sourceVector.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>=<sp/>sourceVector.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref><sp/>/<sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>=<sp/>-sourceVector.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref><sp/>/<sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a0b55d23e9fa321c34a60752605c19bae" kindref="member">w</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(sourceVector.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>)<sp/>&lt;<sp/>0.6)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref><sp/>=<sp/>sqrt(1.0<sp/>-<sp/>sourceVector.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref><sp/>*<sp/>sourceVector.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>=<sp/>-sourceVector.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref><sp/>/<sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>=<sp/>sourceVector.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref><sp/>/<sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a0b55d23e9fa321c34a60752605c19bae" kindref="member">w</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref><sp/>=<sp/>sqrt(1.0<sp/>-<sp/>sourceVector.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref><sp/>*<sp/>sourceVector.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>=<sp/>sourceVector.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref><sp/>/<sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>=<sp/>-sourceVector.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref><sp/>/<sp/><ref refid="of_polyline_8cpp_1ac5e2dd4a56586b411b413bc76e3a767a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a0b55d23e9fa321c34a60752605c19bae" kindref="member">w</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>shortest<sp/>angle<sp/>quaternion<sp/>that<sp/>transforms<sp/>normalized<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>other.<sp/>Formula<sp/>is<sp/>still<sp/>valid<sp/>when<sp/>vectors<sp/>are<sp/>colinear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sqrt(0.5<sp/>*<sp/>dotProdPlus1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>tmp<sp/>=<sp/>sourceVector.<ref refid="classof_vec3f_1ac1f9ddfac842007ffa14dfbe3034b6db" kindref="member">getCrossed</ref>(targetVector)<sp/>/<sp/>(2.0<sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>=<sp/>tmp.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>=<sp/>tmp.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>=<sp/>tmp.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a0b55d23e9fa321c34a60752605c19bae" kindref="member">w</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>rotation<sp/>Quat<sp/>which<sp/>will<sp/>rotate<sp/>vec1<sp/>to<sp/>vec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generally<sp/>take<sp/>adot<sp/>product<sp/>to<sp/>get<sp/>the<sp/>angle<sp/>between<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>use<sp/>a<sp/>cross<sp/>product<sp/>to<sp/>get<sp/>the<sp/>rotation<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Watch<sp/>out<sp/>for<sp/>the<sp/>two<sp/>special<sp/>cases<sp/>of<sp/>when<sp/>the<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>co-incident<sp/>or<sp/>opposite<sp/>in<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a2a93cb5acd035d43fb76538fbd16c3cd" kindref="member">ofQuaternion::makeRotate_original</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>to<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0.0000001f;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>length1<sp/><sp/>=<sp/>from.<ref refid="classof_vec3f_1a046f6be2f082255de4e99056b2f206fa" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1afbe5ae05c94c7a768bb34f05156fe950" kindref="member">length2</ref><sp/><sp/>=<sp/>to.<ref refid="classof_vec3f_1a046f6be2f082255de4e99056b2f206fa" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dot<sp/>product<sp/>vec1*vec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosangle<sp/>=<sp/>from.<ref refid="classof_vec3f_1ade3c568b869e9d83a4c2cc8d102c1c98" kindref="member">dot</ref>(to)<sp/>/<sp/>(length1<sp/>*<sp/><ref refid="classof_quaternion_1afbe5ae05c94c7a768bb34f05156fe950" kindref="member">length2</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fabs(cosangle<sp/>-<sp/>1)<sp/>&lt;<sp/>epsilon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//osg::notify(osg::INFO)&lt;&lt;&quot;***<sp/>Quat::makeRotate(from,to)<sp/>with<sp/>near<sp/>co-linear<sp/>vectors,<sp/>epsilon=<sp/>&quot;&lt;&lt;fabs(cosangle-1)&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cosangle<sp/>is<sp/>close<sp/>to<sp/>1,<sp/>so<sp/>the<sp/>vectors<sp/>are<sp/>close<sp/>to<sp/>being<sp/>coincident</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>generate<sp/>an<sp/>angle<sp/>of<sp/>zero<sp/>with<sp/>any<sp/>vector<sp/>we<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>choose<sp/>(1,0,0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fabs(cosangle<sp/>+<sp/>1.0)<sp/>&lt;<sp/>epsilon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vectors<sp/>are<sp/>close<sp/>to<sp/>being<sp/>opposite,<sp/>so<sp/>will<sp/>need<sp/>to<sp/>find<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>orthongonal<sp/>to<sp/>from<sp/>to<sp/>rotate<sp/>about.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(from.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>)<sp/>&lt;<sp/>fabs(from.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(from.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>)<sp/>&lt;<sp/>fabs(from.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>))<sp/>tmp.<ref refid="classof_vec3f_1ab0fbcc339bab2e81464fbe8de96b46c6" kindref="member">set</ref>(1.0,<sp/>0.0,<sp/>0.0);<sp/></highlight><highlight class="comment">//<sp/>use<sp/>x<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>tmp.<ref refid="classof_vec3f_1ab0fbcc339bab2e81464fbe8de96b46c6" kindref="member">set</ref>(0.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(from.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>)<sp/>&lt;<sp/>fabs(from.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>))<sp/>tmp.<ref refid="classof_vec3f_1ab0fbcc339bab2e81464fbe8de96b46c6" kindref="member">set</ref>(0.0,<sp/>1.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>tmp.<ref refid="classof_vec3f_1ab0fbcc339bab2e81464fbe8de96b46c6" kindref="member">set</ref>(0.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>fromd(from.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>,<sp/>from.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>,<sp/>from.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>orthogonal<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>axis(fromd.getCrossed(tmp));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis.<ref refid="classof_vec3f_1a878f3aee3675df4b81ac0f9c42ebc609" kindref="member">normalize</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>=<sp/>axis[0];<sp/></highlight><highlight class="comment">//<sp/>sin<sp/>of<sp/>half<sp/>angle<sp/>of<sp/>PI<sp/>is<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>=<sp/>axis[1];<sp/></highlight><highlight class="comment">//<sp/>sin<sp/>of<sp/>half<sp/>angle<sp/>of<sp/>PI<sp/>is<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>=<sp/>axis[2];<sp/></highlight><highlight class="comment">//<sp/>sin<sp/>of<sp/>half<sp/>angle<sp/>of<sp/>PI<sp/>is<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a0b55d23e9fa321c34a60752605c19bae" kindref="member">w</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>cos<sp/>of<sp/>half<sp/>angle<sp/>of<sp/>PI<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>usual<sp/>situation<sp/>-<sp/>take<sp/>a<sp/>cross-product<sp/>of<sp/>vec1<sp/>and<sp/>vec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>that<sp/>is<sp/>the<sp/>axis<sp/>around<sp/>which<sp/>to<sp/>rotate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>axis(from.<ref refid="classof_vec3f_1ac1f9ddfac842007ffa14dfbe3034b6db" kindref="member">getCrossed</ref>(to));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>acos(<sp/>cosangle<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(<sp/>angle,<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a785d6dda9fd0a9c7643c39ce125f3f54" kindref="member">ofQuaternion::getRotate</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>angle,<sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>vec<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>,<sp/><ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>,<sp/><ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion_1a785d6dda9fd0a9c7643c39ce125f3f54" kindref="member">getRotate</ref>(angle,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref><sp/>=<sp/><ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref><sp/>=<sp/><ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref><sp/>=<sp/><ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>angle<sp/>of<sp/>rotation<sp/>and<sp/>axis<sp/>of<sp/>this<sp/>Quat<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Won&apos;t<sp/>give<sp/>very<sp/>meaningful<sp/>results<sp/>if<sp/>the<sp/>Quat<sp/>is<sp/>not<sp/>associated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>rotation!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a785d6dda9fd0a9c7643c39ce125f3f54" kindref="member">ofQuaternion::getRotate</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>z<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinhalfangle<sp/>=<sp/>sqrt(<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>*<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>+<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>*<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>+<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>*<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>2.0<sp/>*<sp/>atan2(<sp/>sinhalfangle,<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a0b55d23e9fa321c34a60752605c19bae" kindref="member">w</ref><sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sinhalfangle)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a20598461757aaad1950614d7b42954d7" kindref="member">x</ref><sp/>/<sp/>sinhalfangle;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a6660d60e0af7f9db6d224061dabd4cae" kindref="member">y</ref><sp/>/<sp/>sinhalfangle;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/><ref refid="classof_quaternion_1ab982b5638bed96d546f666393f4e2183" kindref="member">_v</ref>.<ref refid="classof_vec4f_1a2fffa6cc623c8f6d7e60aa9f9c7ae9d0" kindref="member">z</ref><sp/>/<sp/>sinhalfangle;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/><ref refid="of_math_8cpp_1a7d02e72641780bca037f6c63f7b6e508" kindref="member">ofRadToDeg</ref>(angle);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion_1a41b20d0248fc98bbf9c64f47da52ed89" kindref="member">ofQuaternion::slerp</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref>&amp;<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref>&amp;<sp/>to<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0.00001;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega,<sp/>cosomega,<sp/>sinomega,<sp/>scale_from,<sp/>scale_to<sp/>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>quatTo(to);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>dot<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosomega<sp/>=<sp/>from.<ref refid="classof_quaternion_1a0afc1e4dba0677c0907290331c09bfeb" kindref="member">asVec4</ref>().<ref refid="classof_vec4f_1ad8d85bd705f13b402fef9f3f9433bd5f" kindref="member">dot</ref>(to.<ref refid="classof_quaternion_1a0afc1e4dba0677c0907290331c09bfeb" kindref="member">asVec4</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cosomega<sp/>&lt;<sp/>0.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosomega<sp/>=<sp/>-cosomega;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quatTo<sp/>=<sp/>-to;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(1.0<sp/>-<sp/>cosomega)<sp/>&gt;<sp/>epsilon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>omega<sp/>=<sp/>acos(cosomega)<sp/>;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>&lt;=<sp/>omega<sp/>&lt;=<sp/>Pi<sp/>(see<sp/>man<sp/>acos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sinomega<sp/>=<sp/>sin(omega)<sp/>;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>sinomega<sp/>should<sp/>always<sp/>be<sp/>+ve<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>try<sp/>sinomega=sqrt(1-cosomega*cosomega)<sp/>to<sp/>avoid<sp/>a<sp/>sin()?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_from<sp/>=<sp/>sin((1.0<sp/>-<sp/>t)<sp/>*<sp/>omega)<sp/>/<sp/>sinomega<sp/>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_to<sp/>=<sp/>sin(t<sp/>*<sp/>omega)<sp/>/<sp/>sinomega<sp/>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------------------------------------</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>ends<sp/>of<sp/>the<sp/>vectors<sp/>are<sp/>very<sp/>close</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>can<sp/>use<sp/>simple<sp/>linear<sp/>interpolation<sp/>-<sp/>no<sp/>need</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>worry<sp/>about<sp/>the<sp/>&quot;spherical&quot;<sp/>interpolation</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_from<sp/>=<sp/>1.0<sp/>-<sp/>t<sp/>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_to<sp/>=<sp/>t<sp/>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>(from<sp/>*<sp/>scale_from)<sp/>+<sp/>(quatTo<sp/>*<sp/>scale_to);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>we<sp/>get<sp/>a<sp/>Vec4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ref<sp/>at<sp/>http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/index.htm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/><ref refid="classof_quaternion_1a8b0ed0f29b9b21c8af859dd6524ac501" kindref="member">ofQuaternion::getEuler</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>test<sp/>=<sp/><ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()*<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>+<sp/><ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()*<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heading;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>attitude;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bank;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test<sp/>&gt;<sp/>0.499)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>singularity<sp/>at<sp/>north<sp/>pole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heading<sp/>=<sp/>2<sp/>*<sp/>atan2(<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>(),<sp/><ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attitude<sp/>=<sp/><ref refid="of_constants_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>/2;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test<sp/>&lt;<sp/>-0.499)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>singularity<sp/>at<sp/>south<sp/>pole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heading<sp/>=<sp/>-2<sp/>*<sp/>atan2(<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>(),<sp/><ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attitude<sp/>=<sp/>-<sp/><ref refid="of_constants_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>/2;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bank<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sqx<sp/>=<sp/><ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>*<sp/><ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sqy<sp/>=<sp/><ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>*<sp/><ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sqz<sp/>=<sp/><ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>*<sp/><ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heading<sp/>=<sp/>atan2(2.0f<sp/>*<sp/><ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>*<sp/><ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>-<sp/>2.0f<sp/>*<sp/><ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>*<sp/><ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>(),<sp/>1.0f<sp/>-<sp/>2.0f*sqy<sp/>-<sp/>2.0f*sqz);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attitude<sp/>=<sp/>asin(2*test);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bank<sp/>=<sp/>atan2(2.0f*<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>*<sp/><ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>-<sp/>2.0f<sp/>*<sp/><ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>*<sp/><ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>(),<sp/>1.0f<sp/>-<sp/>2.0f*sqx<sp/>-<sp/>2.0f*sqz);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>(<ref refid="of_math_8cpp_1a7d02e72641780bca037f6c63f7b6e508" kindref="member">ofRadToDeg</ref>(attitude),<sp/><ref refid="of_math_8cpp_1a7d02e72641780bca037f6c63f7b6e508" kindref="member">ofRadToDeg</ref>(heading),<sp/><ref refid="of_math_8cpp_1a7d02e72641780bca037f6c63f7b6e508" kindref="member">ofRadToDeg</ref>(bank));</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QX<sp/><sp/>_v.x</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QY<sp/><sp/>_v.y</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QZ<sp/><sp/>_v.z</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QW<sp/><sp/>_v.w</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofQuaternion.cpp"/>
  </compounddef>
</doxygen>
