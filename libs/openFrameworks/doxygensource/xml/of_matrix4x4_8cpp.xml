<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="of_matrix4x4_8cpp" kind="file">
    <compoundname>ofMatrix4x4.cpp</compoundname>
    <includes refid="of_matrix4x4_8h" local="yes">ofMatrix4x4.h</includes>
    <includes local="no">limits</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="of_constants_8h" local="yes">ofConstants.h</includes>
    <incdepgraph>
      <node id="3133">
        <label>iomanip</label>
      </node>
      <node id="3137">
        <label>limits</label>
      </node>
      <node id="3136">
        <label>ofQuaternion.h</label>
        <link refid="of_quaternion_8h"/>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
      </node>
      <node id="3135">
        <label>ofVec4f.h</label>
        <link refid="of_vec4f_8h"/>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3138">
        <label>stdlib.h</label>
      </node>
      <node id="3121">
        <label>GL/glx.h</label>
      </node>
      <node id="3116">
        <label>ofVec2f.h</label>
        <link refid="of_vec2f_8h"/>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3126">
        <label>cmath</label>
      </node>
      <node id="3115">
        <label>ofVec3f.h</label>
        <link refid="of_vec3f_8h"/>
        <childnode refid="3116" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
      </node>
      <node id="3128">
        <label>string</label>
      </node>
      <node id="3125">
        <label>cstdarg</label>
      </node>
      <node id="3119">
        <label>GL/glew.h</label>
      </node>
      <node id="3122">
        <label>tesselator.h</label>
      </node>
      <node id="3134">
        <label>fstream</label>
      </node>
      <node id="3124">
        <label>cstdio</label>
      </node>
      <node id="3127">
        <label>ctime</label>
      </node>
      <node id="3118">
        <label>unistd.h</label>
      </node>
      <node id="3130">
        <label>vector</label>
      </node>
      <node id="3117">
        <label>ofConstants.h</label>
        <link refid="of_constants_8h"/>
        <childnode refid="3118" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
        <childnode refid="3130" relation="include">
        </childnode>
        <childnode refid="3131" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
        <childnode refid="3133" relation="include">
        </childnode>
        <childnode refid="3134" relation="include">
        </childnode>
      </node>
      <node id="3132">
        <label>sstream</label>
      </node>
      <node id="3114">
        <label>ofMatrix4x4.h</label>
        <link refid="of_matrix4x4_8h"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
        <childnode refid="3136" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
      </node>
      <node id="3113">
        <label>math/ofMatrix4x4.cpp</label>
        <link refid="ofMatrix4x4.cpp"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3137" relation="include">
        </childnode>
        <childnode refid="3138" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3123">
        <label>cstdlib</label>
      </node>
      <node id="3129">
        <label>iostream</label>
      </node>
      <node id="3120">
        <label>GL/gl.h</label>
      </node>
      <node id="3131">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct__affine_parts" prot="public">_affineParts</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" prot="public" static="no">
        <name>SET_ROW</name>
        <param><defname>row</defname></param>
        <param><defname>v1</defname></param>
        <param><defname>v2</defname></param>
        <param><defname>v3</defname></param>
        <param><defname>v4</defname></param>
        <initializer>_mat[(row)][0] = (v1); \
_mat[(row)][1] = (v2); \
_mat[(row)][2] = (v3); \
_mat[(row)][3] = (v4);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="24" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" prot="public" static="no">
        <name>INNER_PRODUCT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>r</defname></param>
        <param><defname>c</defname></param>
        <initializer>((a)._mat[r][0] * (b)._mat[0][c]) \
+((a)._mat[r][1] * (b)._mat[1][c]) \
+((a)._mat[r][2] * (b)._mat[2][c]) \
+((a)._mat[r][3] * (b)._mat[3][c])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="30" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" prot="public" static="no">
        <name>QX</name>
        <initializer>q._v[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="54" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" prot="public" static="no">
        <name>QY</name>
        <initializer>q._v[1]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="55" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" prot="public" static="no">
        <name>QZ</name>
        <initializer>q._v[2]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="56" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" prot="public" static="no">
        <name>QW</name>
        <initializer>q._v[3]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="57" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a4936835e8c1ab959e4c49f528cd215d6" prot="public" static="no">
        <name>COMPILE_getRotate_Original</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="172" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a2530554172d8629149ec56816eeaa947" prot="public" static="no">
        <name>d</name>
        <initializer>r22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="657"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a202a282799ace8d7de6aa1f699ef546d" prot="public" static="no">
        <name>px</name>
        <initializer>r00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="666"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a7284a3e64f3c6d8d549a591c5208aedd" prot="public" static="no">
        <name>py</name>
        <initializer>r01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="667"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a3dc06ac98e72b809b5ff6daf0a442c37" prot="public" static="no">
        <name>pz</name>
        <initializer>r02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="668"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a61d163a084801954001135cba8afd5e3" prot="public" static="no">
        <name>one_over_s</name>
        <initializer>one_over_det</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="669"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a8d3c3518d793541417a4845125da1ae1" prot="public" static="no">
        <name>a</name>
        <initializer>r10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="670"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1ab2d05693952610f937e5acb3c4a8fa1b" prot="public" static="no">
        <name>b</name>
        <initializer>r11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="671"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1aafc737ea9ef91f59cf9acd287fb8d085" prot="public" static="no">
        <name>c</name>
        <initializer>r12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="672"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" prot="public" static="no">
        <name>tx</name>
        <initializer>r10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="682"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" prot="public" static="no">
        <name>ty</name>
        <initializer>r11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="683"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" prot="public" static="no">
        <name>tz</name>
        <initializer>r12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="684"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a5de24d5109e4b658face7fa8b5b94286" prot="public" static="no">
        <name>SGL_SWAP</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>temp</defname></param>
        <initializer>((temp)=(a),(a)=(b),(b)=(temp))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="742" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1abc0d7ca08089f78a080423c15de6c2fa" prot="public" static="no">
        <name>SQRTHALF</name>
        <initializer>(0.7071067811865475244)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="961" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="961" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a5e05441d6283d0ca4b85aba0017aab18" prot="public" static="no">
        <name>matrixCopy</name>
        <param><defname>C</defname></param>
        <param><defname>gets</defname></param>
        <param><defname>A</defname></param>
        <param><defname>n</defname></param>
        <initializer>{int i, j; for (i=0;i&lt;n;i++) for (j=0;j&lt;n;j++)\
    C[i][j] gets (A[i][j]);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy nxn matrix A to C using &quot;gets&quot; for assignment </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="973" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="972" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a14951b3900fb3530b2f9d2752443d3f2" prot="public" static="no">
        <name>mat_tpose</name>
        <param><defname>AT</defname></param>
        <param><defname>gets</defname></param>
        <param><defname>A</defname></param>
        <param><defname>n</defname></param>
        <initializer>{int i,j; for(i=0;i&lt;n;i++) for(j=0;j&lt;n;j++)\
    AT[i][j] gets (A[j][i]);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy transpose of nxn matrix A to C using &quot;gets&quot; for assignment </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="977" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a6e77b46d645e6a6866c3260d7389976a" prot="public" static="no">
        <name>mat_pad</name>
        <param><defname>A</defname></param>
        <initializer>(A[W][X]=A[X][W]=A[W][Y]=A[Y][W]=A[W][Z]=A[Z][W]=0,A[W][W]=1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill out 3x3 matrix to 4x4 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="980" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a6be67e7073486170ee67171891dd5181" prot="public" static="no">
        <name>matBinop</name>
        <param><defname>C</defname></param>
        <param><defname>gets</defname></param>
        <param><defname>A</defname></param>
        <param><defname>op</defname></param>
        <param><defname>B</defname></param>
        <param><defname>n</defname></param>
        <initializer>{int i,j; for(i=0;i&lt;n;i++) for(j=0;j&lt;n;j++)\
    C[i][j] gets (A[i][j]) op (B[i][j]);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign nxn matrix C the element-wise combination of A and B using &quot;op&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="985" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="984" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a0eb958b865b3083981030654274ce09e" prot="public" static="no">
        <name>mat_copy</name>
        <param><defname>C</defname></param>
        <param><defname>gets</defname></param>
        <param><defname>A</defname></param>
        <param><defname>n</defname></param>
        <initializer>{int i,j; for(i=0;i&lt;n;i++) for(j=0;j&lt;n;j++)\
    C[i][j] gets (A[i][j]);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy nxn matrix A to C using &quot;gets&quot; for assignment </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="989" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="988" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a680c8bc94fb11bd684b4edab2d6e48d3" prot="public" static="no">
        <name>caseMacro</name>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <param><defname>k</defname></param>
        <param><defname>I</defname></param>
        <param><defname>J</defname></param>
        <param><defname>K</defname></param>
        <initializer>case I:\
				  s = sqrt( (mat[I][I] - (mat[J][J]+mat[K][K])) + mat[W][W] );\
		   qu.i() = s*0.5;\
		   s = 0.5 / s;\
		   qu.j() = (mat[I][J] + mat[J][I]) * s;\
		   qu.k() = (mat[K][I] + mat[I][K]) * s;\
		   qu.w() = (mat[K][J] - mat[J][K]) * s;\
		   break</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1175"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a156b862ebf6d213f5da19b9e3ccb779e" prot="public" static="no">
        <name>TOL</name>
        <initializer>1.0e-6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1197"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a455057e8062f0978e7cfc4c88b244c82" prot="public" static="no">
        <name>sgn</name>
        <param><defname>n</defname></param>
        <param><defname>v</defname></param>
        <initializer>((n)?-(v):(v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1331"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1afe418d2ee4c27f9916c687ebe48968bb" prot="public" static="no">
        <name>swap</name>
        <param><defname>a</defname></param>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <initializer>{a[3]=a[i]; a[i]=a[j]; a[j]=a[3];}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1332"/>
      </memberdef>
      <memberdef kind="define" id="of_matrix4x4_8cpp_1a439791da41fdc56e3544e3012da5e78b" prot="public" static="no">
        <name>cycle</name>
        <param><defname>a</defname></param>
        <param><defname>p</defname></param>
        <initializer>if (p) {a[3]=a[0]; a[0]=a[1]; a[1]=a[2]; a[2]=a[3];}\
	else   {a[3]=a[2]; a[2]=a[1]; a[1]=a[0]; a[0]=a[3];}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1334"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6" prot="public" static="no">
        <name>QuatPart</name>
        <enumvalue id="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" prot="public">
          <name>X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" prot="public">
          <name>Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" prot="public">
          <name>Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" prot="public">
          <name>W</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="959" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="959" bodyend="959"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="of_matrix4x4_8cpp_1a1000bcdb97681831922d22d72246f25e" prot="public" static="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>typedef ofQuaternion HVect</definition>
        <argsstring></argsstring>
        <name>HVect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="947" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="947" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" prot="public" static="no">
        <type>double</type>
        <definition>typedef double _HMatrix[4][4]</definition>
        <argsstring>[4][4]</argsstring>
        <name>_HMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="948" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="948" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1a4a7ef31d691bbab33099a9abd4293aef" prot="public" static="yes" mutable="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion qxtoz(0, SQRTHALF, 0, SQRTHALF)</definition>
        <argsstring>(0, SQRTHALF, 0, SQRTHALF)</argsstring>
        <name>qxtoz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="962"/>
      </memberdef>
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1a7872d0664db0da0092165fcaa39e83fb" prot="public" static="yes" mutable="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion qytoz(SQRTHALF, 0, 0, SQRTHALF)</definition>
        <argsstring>(SQRTHALF, 0, 0, SQRTHALF)</argsstring>
        <name>qytoz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="963"/>
      </memberdef>
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1aabfd46360fb74a3e6b11fdd16fc61727" prot="public" static="yes" mutable="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion qppmm(0.5, 0.5,-0.5,-0.5)</definition>
        <argsstring>(0.5, 0.5,-0.5,-0.5)</argsstring>
        <name>qppmm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="964"/>
      </memberdef>
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1a50e0fdae3fdbddeb39e2a5126b5282bf" prot="public" static="yes" mutable="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion qpppp(0.5, 0.5, 0.5, 0.5)</definition>
        <argsstring>(0.5, 0.5, 0.5, 0.5)</argsstring>
        <name>qpppp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="965"/>
      </memberdef>
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1a1f859ffb320babbe3de2d23eaf6b89b0" prot="public" static="yes" mutable="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion qmpmm(-0.5, 0.5,-0.5,-0.5)</definition>
        <argsstring>(-0.5, 0.5,-0.5,-0.5)</argsstring>
        <name>qmpmm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="966"/>
      </memberdef>
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1a8210d5c73e68dd1447c53fb968da93d0" prot="public" static="yes" mutable="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion qpppm(0.5, 0.5, 0.5,-0.5)</definition>
        <argsstring>(0.5, 0.5, 0.5,-0.5)</argsstring>
        <name>qpppm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="967"/>
      </memberdef>
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1a8995ff0eebc14fa5082a356f3387041e" prot="public" static="yes" mutable="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion q0001(0.0, 0.0, 0.0, 1.0)</definition>
        <argsstring>(0.0, 0.0, 0.0, 1.0)</argsstring>
        <name>q0001</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="968"/>
      </memberdef>
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1adaff7e311d07fec3bf3ac27550785da1" prot="public" static="yes" mutable="no">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion q1000(1.0, 0.0, 0.0, 0.0)</definition>
        <argsstring>(1.0, 0.0, 0.0, 0.0)</argsstring>
        <name>q1000</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="969"/>
      </memberdef>
      <memberdef kind="variable" id="of_matrix4x4_8cpp_1ad3d31243102e53520dd39ee52e5429ce" prot="public" static="yes" mutable="no">
        <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
        <definition>_HMatrix mat_id</definition>
        <argsstring></argsstring>
        <name>mat_id</name>
        <initializer> {{1,0,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,1}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1015" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1015" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a9e1ededea011718cda2bc5c76bd49335" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool equivalent</definition>
        <argsstring>(double lhs, double rhs, double epsilon=1e-6)</argsstring>
        <name>equivalent</name>
        <param>
          <type>double</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="16" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="15" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a10734ff8d95f344600432b0333f3005f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T square</definition>
        <argsstring>(T v)</argsstring>
        <name>square</name>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="18" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a19160f01f02f713b3629b623a24cade7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool invert_4x3</definition>
        <argsstring>(const ofMatrix4x4 &amp;src, ofMatrix4x4 &amp;dst)</argsstring>
        <name>invert_4x3</name>
        <param>
          <type>const <ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>4x3 matrix invert, not right hand column is assumed to be 0,0,0,1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="568" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="615" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a4953e5dc8d1015af720c28d043b66161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool invert_4x4</definition>
        <argsstring>(const ofMatrix4x4 &amp;rhs, ofMatrix4x4 &amp;dst)</argsstring>
        <name>invert_4x4</name>
        <param>
          <type>const <ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>full 4x4 matrix invert. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="571" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="745" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a1118c8ee1dedb8a5cd9bd4af02ed8982" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T SGL_ABS</definition>
        <argsstring>(T a)</argsstring>
        <name>SGL_ABS</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="737" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="736" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a25ea8fe601108cfe2d90da8076f11d13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mat_mult</definition>
        <argsstring>(_HMatrix A, _HMatrix B, _HMatrix AB)</argsstring>
        <name>mat_mult</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>AB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply the upper left 3x3 parts of A and B to get AB </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="993" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="992" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a1e3560a61f1dd58846ef472689db51fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mat_norm</definition>
        <argsstring>(_HMatrix M, int tpose)</argsstring>
        <name>mat_norm</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tpose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1000" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="999" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a4ca81ec6c69c763ea25ffe7130ee2513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double norm_inf</definition>
        <argsstring>(_HMatrix M)</argsstring>
        <name>norm_inf</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1012" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1012" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a5bb000e90bf85938a386155927a1dbe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double norm_one</definition>
        <argsstring>(_HMatrix M)</argsstring>
        <name>norm_one</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1013" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1013" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a87dcf4daf6a0d41ca6c3346e9af2e6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int find_max_col</definition>
        <argsstring>(_HMatrix M)</argsstring>
        <name>find_max_col</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return index of column of M containing maximum abs entry, or -1 if M=0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1019" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1018" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1ad2b168b24c236bd56e5b2c6487b9c9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vcross</definition>
        <argsstring>(double *va, double *vb, double *v)</argsstring>
        <name>vcross</name>
        <param>
          <type>double *</type>
          <declname>va</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1031" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1030" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a21e03864a3b2b737d198703aed86974c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vdot</definition>
        <argsstring>(double *va, double *vb)</argsstring>
        <name>vdot</name>
        <param>
          <type>double *</type>
          <declname>va</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return dot product of length 3 vectors va and vb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1039" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1038" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a45fedd24f53f02d960ab1690e8fe98dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adjoint_transpose</definition>
        <argsstring>(_HMatrix M, _HMatrix MadjT)</argsstring>
        <name>adjoint_transpose</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>MadjT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set MadjT to transpose of inverse of M times determinant of M </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1046" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1045" bodyend="1050"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1ac680603d21d57625509d620e83557578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_reflector</definition>
        <argsstring>(double *v, double *u)</argsstring>
        <name>make_reflector</name>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup u for Household reflection to zero all v components but first </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1054" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1053" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1afe114125dd33e70819681be67106fe3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reflect_cols</definition>
        <argsstring>(_HMatrix M, double *u)</argsstring>
        <name>reflect_cols</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply Householder reflection represented by u to column vectors of M </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1064" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1063" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a1b40bdbbdb0987023bea17d9d20d5c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reflect_rows</definition>
        <argsstring>(_HMatrix M, double *u)</argsstring>
        <name>reflect_rows</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply Householder reflection represented by u to row vectors of M </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1074" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1073" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1ac0861013e63b003e1fecc2c0d78ee609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void do_rank1</definition>
        <argsstring>(_HMatrix M, _HMatrix Q)</argsstring>
        <name>do_rank1</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>Q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find orthogonal factor Q of rank 1 (or less) M </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1084" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1083" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1ae82f43992fdaba27dc9a521e12e56156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void do_rank2</definition>
        <argsstring>(_HMatrix M, _HMatrix MadjT, _HMatrix Q)</argsstring>
        <name>do_rank2</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>MadjT</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>Q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find orthogonal factor Q of rank 2 (or less) M using adjoint transpose </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1102" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1101" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a0ca80a961f3aadf0677ae858482d964b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion Qt_Scale</definition>
        <argsstring>(ofQuaternion q, double w)</argsstring>
        <name>Qt_Scale</name>
        <param>
          <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1127" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1126" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a4ec8fdbd98d97ef8a78991a6dcf2cb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion quatFromMatrix</definition>
        <argsstring>(_HMatrix mat)</argsstring>
        <name>quatFromMatrix</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1142" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1141" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1af130c2c87ac7672da2322e57c5eed993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double polarDecomp</definition>
        <argsstring>(_HMatrix M, _HMatrix Q, _HMatrix S)</argsstring>
        <name>polarDecomp</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>Q</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1195" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1194" bodyend="1237"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1af0a56e1aca0a85da6cf609a436faa053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classof_quaternion" kindref="compound">HVect</ref></type>
        <definition>HVect spectDecomp</definition>
        <argsstring>(_HMatrix S, _HMatrix U)</argsstring>
        <name>spectDecomp</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>U</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1246" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1245" bodyend="1289"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a21ba8a5cb17f808261f8705ce309f781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion Qt_Conj</definition>
        <argsstring>(ofQuaternion q)</argsstring>
        <name>Qt_Conj</name>
        <param>
          <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1293" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1292" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a56e5fafee6d70b5e65499aee11e770ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion Qt_Mul</definition>
        <argsstring>(ofQuaternion qL, ofQuaternion qR)</argsstring>
        <name>Qt_Mul</name>
        <param>
          <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
          <declname>qL</declname>
        </param>
        <param>
          <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
          <declname>qR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1303" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1302" bodyend="1310"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a4267bdb21e909bbb0c6fed616c06c2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion Qt_</definition>
        <argsstring>(double x, double y, double z, double w)</argsstring>
        <name>Qt_</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1314" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1313" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a8e67ff3f025e3763ac3515e2d9b93c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
        <definition>ofQuaternion snuggle</definition>
        <argsstring>(ofQuaternion q, HVect *k)</argsstring>
        <name>snuggle</name>
        <param>
          <type><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="classof_quaternion" kindref="compound">HVect</ref> *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1330" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1329" bodyend="1458"/>
      </memberdef>
      <memberdef kind="function" id="of_matrix4x4_8cpp_1a4753de909467e775a7ae42f2c2256639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decompAffine</definition>
        <argsstring>(_HMatrix A, _affineParts *parts)</argsstring>
        <name>decompAffine</name>
        <param>
          <type><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref></type>
          <declname>A</declname>
        </param>
        <param>
          <type>_affineParts *</type>
          <declname>parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" line="1470" bodyfile="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp" bodystart="1469" bodyend="1490"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="of_matrix4x4_8h" kindref="compound">ofMatrix4x4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="of_constants_8h" kindref="compound">ofConstants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(_MSC_VER)</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>min</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>see:<sp/>http://stackoverflow.com/questions/1904635/warning-c4003-and-errors-c2589-and-c2059-on-x-stdnumericlimitsintmax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a9e1ededea011718cda2bc5c76bd49335" kindref="member">equivalent</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon=1e-6)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>rhs-lhs;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta&lt;0.0?delta&gt;=-epsilon:delta&lt;=epsilon;<sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="of_matrix4x4_8cpp_1a10734ff8d95f344600432b0333f3005f" kindref="member">square</ref>(T<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v*v;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_ROW(row,<sp/>v1,<sp/>v2,<sp/>v3,<sp/>v4<sp/>)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">_mat[(row)][0]<sp/>=<sp/>(v1);<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">_mat[(row)][1]<sp/>=<sp/>(v2);<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor">_mat[(row)][2]<sp/>=<sp/>(v3);<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">_mat[(row)][3]<sp/>=<sp/>(v4);</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INNER_PRODUCT(a,b,r,c)<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">((a)._mat[r][0]<sp/>*<sp/>(b)._mat[0][c])<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor">+((a)._mat[r][1]<sp/>*<sp/>(b)._mat[1][c])<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor">+((a)._mat[r][2]<sp/>*<sp/>(b)._mat[2][c])<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">+((a)._mat[r][3]<sp/>*<sp/>(b)._mat[3][c])</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classof_matrix4x4_1ad75d4fc13d259fc3d23634f90c9370eb" kindref="member">ofMatrix4x4::ofMatrix4x4</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a00,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a01,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a02,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a03,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a10,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a11,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a12,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a13,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a20,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a21,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a22,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a23,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a30,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a31,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a32,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a33)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(0,<sp/>a00,<sp/>a01,<sp/>a02,<sp/>a03<sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(1,<sp/>a10,<sp/>a11,<sp/>a12,<sp/>a13<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(2,<sp/>a20,<sp/>a21,<sp/>a22,<sp/>a23<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(3,<sp/>a30,<sp/>a31,<sp/>a32,<sp/>a33<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>::<ref refid="classof_matrix4x4_1a223d5c256c491f923e32b1a7571ba106" kindref="member">set</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a00,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a01,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a02,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a03,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a10,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a11,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a12,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a13,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a20,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a21,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a22,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a23,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a30,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a31,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a32,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a33)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(0,<sp/>a00,<sp/>a01,<sp/>a02,<sp/>a03<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(1,<sp/>a10,<sp/>a11,<sp/>a12,<sp/>a13<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(2,<sp/>a20,<sp/>a21,<sp/>a22,<sp/>a23<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(3,<sp/>a30,<sp/>a31,<sp/>a32,<sp/>a33<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QX<sp/><sp/>q._v[0]</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QY<sp/><sp/>q._v[1]</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QZ<sp/><sp/>q._v[2]</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QW<sp/><sp/>q._v[3]</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1ace388ef9b8c18c25e541d01711587187" kindref="member">ofMatrix4x4::setRotate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref>&amp;<sp/>q)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length2<sp/>=<sp/>q.<ref refid="classof_quaternion_1afbe5ae05c94c7a768bb34f05156fe950" kindref="member">length2</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(length2)<sp/>&lt;=<sp/>std::numeric_limits&lt;double&gt;::min())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>=<sp/>1.0;<sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0]<sp/>=<sp/>0.0;<sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>=<sp/>0.0;<sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]<sp/>=<sp/>1.0;<sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]<sp/>=<sp/>0.0;<sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2]<sp/>=<sp/>0.0;<sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rlength2;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>quat<sp/>if<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>avoid<sp/>the<sp/>expensive<sp/>sqrt<sp/>in<sp/>this<sp/>case<sp/>since<sp/>all<sp/>&apos;coefficients&apos;<sp/>below<sp/>are<sp/>products<sp/>of<sp/>two<sp/>q<sp/>components.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>is<sp/>a<sp/>square<sp/>of<sp/>a<sp/>square<sp/>root,<sp/>so<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>avoid<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length2<sp/>!=<sp/>1.0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlength2<sp/>=<sp/>2.0/length2;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlength2<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Source:<sp/>Gamasutra,<sp/>Rotating<sp/>Objects<sp/>Using<sp/>Quaternions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//http://www.gamasutra.com/features/19980703/quaternions_01.htm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wx,<sp/>wy,<sp/>wz,<sp/>xx,<sp/>yy,<sp/>yz,<sp/>xy,<sp/>xz,<sp/>zz,<sp/>x2,<sp/>y2,<sp/>z2;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>rlength2*<ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>rlength2*<ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z2<sp/>=<sp/>rlength2*<ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>QX<sp/>*<sp/>x2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xy<sp/>=<sp/>QX<sp/>*<sp/>y2;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xz<sp/>=<sp/>QX<sp/>*<sp/>z2;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>QY<sp/>*<sp/>y2;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yz<sp/>=<sp/>QY<sp/>*<sp/>z2;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zz<sp/>=<sp/>QZ<sp/>*<sp/>z2;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wx<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>*<sp/>x2;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wy<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>*<sp/>y2;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wz<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>*<sp/>z2;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note.<sp/><sp/>Gamasutra<sp/>gets<sp/>the<sp/>matrix<sp/>assignments<sp/>inverted,<sp/>resulting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>left-handed<sp/>rotations,<sp/>which<sp/>is<sp/>contrary<sp/>to<sp/>OpenGL<sp/>and<sp/>OSG&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>methodology.<sp/><sp/>The<sp/>matrix<sp/>assignment<sp/>has<sp/>been<sp/>altered<sp/>in<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>few<sp/>lines<sp/>of<sp/>code<sp/>to<sp/>do<sp/>the<sp/>right<sp/>thing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don<sp/>Burns<sp/>-<sp/>Oct<sp/>13,<sp/>2001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>=<sp/>1.0<sp/>-<sp/>(yy<sp/>+<sp/>zz);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0]<sp/>=<sp/>xy<sp/>-<sp/>wz;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]<sp/>=<sp/>xz<sp/>+<sp/>wy;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>=<sp/>xy<sp/>+<sp/>wz;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]<sp/>=<sp/>1.0<sp/>-<sp/>(xx<sp/>+<sp/>zz);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]<sp/>=<sp/>yz<sp/>-<sp/>wx;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]<sp/>=<sp/>xz<sp/>-<sp/>wy;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2]<sp/>=<sp/>yz<sp/>+<sp/>wx;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]<sp/>=<sp/>1.0<sp/>-<sp/>(xx<sp/>+<sp/>yy);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][3]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//ofQuaternion<sp/>ofMatrix4x4::getRotate()<sp/>const<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ofVec4f<sp/>q;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>trace<sp/>=<sp/>_mat[0][0]<sp/>+<sp/>_mat[1][1]<sp/>+<sp/>_mat[2][2];<sp/>//<sp/>I<sp/>removed<sp/>+<sp/>1.0f;<sp/>see<sp/>discussion<sp/>with<sp/>Ethan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>trace<sp/>&gt;<sp/>0<sp/>)<sp/>{//<sp/>I<sp/>changed<sp/>M_EPSILON<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>s<sp/>=<sp/>0.5f<sp/>/<sp/>sqrtf(trace+<sp/>1.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.w<sp/>=<sp/>0.25f<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.x<sp/>=<sp/>(<sp/>_mat[2][1]<sp/>-<sp/>_mat[1][2]<sp/>)<sp/>*<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.y<sp/>=<sp/>(<sp/>_mat[0][2]<sp/>-<sp/>_mat[2][0]<sp/>)<sp/>*<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.z<sp/>=<sp/>(<sp/>_mat[1][0]<sp/>-<sp/>_mat[0][1]<sp/>)<sp/>*<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>_mat[0][0]<sp/>&gt;<sp/>_mat[1][1]<sp/>&amp;&amp;<sp/>_mat[0][0]<sp/>&gt;<sp/>_mat[2][2]<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>s<sp/>=<sp/>2.0f<sp/>*<sp/>sqrtf(<sp/>1.0f<sp/>+<sp/>_mat[0][0]<sp/>-<sp/>_mat[1][1]<sp/>-<sp/>_mat[2][2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.w<sp/>=<sp/>(_mat[2][1]<sp/>-<sp/>_mat[1][2]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.x<sp/>=<sp/>0.25f<sp/>*<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.y<sp/>=<sp/>(_mat[0][1]<sp/>+<sp/>_mat[1][0]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.z<sp/>=<sp/>(_mat[0][2]<sp/>+<sp/>_mat[2][0]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(_mat[1][1]<sp/>&gt;<sp/>_mat[2][2])<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>s<sp/>=<sp/>2.0f<sp/>*<sp/>sqrtf(<sp/>1.0f<sp/>+<sp/>_mat[1][1]<sp/>-<sp/>_mat[0][0]<sp/>-<sp/>_mat[2][2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.w<sp/>=<sp/>(_mat[0][2]<sp/>-<sp/>_mat[2][0]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.x<sp/>=<sp/>(_mat[0][1]<sp/>+<sp/>_mat[1][0]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.y<sp/>=<sp/>0.25f<sp/>*<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.z<sp/>=<sp/>(_mat[1][2]<sp/>+<sp/>_mat[2][1]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>s<sp/>=<sp/>2.0f<sp/>*<sp/>sqrtf(<sp/>1.0f<sp/>+<sp/>_mat[2][2]<sp/>-<sp/>_mat[0][0]<sp/>-<sp/>_mat[1][1]<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.w<sp/>=<sp/>(_mat[1][0]<sp/>-<sp/>_mat[0][1]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.x<sp/>=<sp/>(_mat[0][2]<sp/>+<sp/>_mat[2][0]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.y<sp/>=<sp/>(_mat[1][2]<sp/>+<sp/>_mat[2][1]<sp/>)<sp/>/<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.z<sp/>=<sp/>0.25f<sp/>*<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ofQuaternion(q.x,<sp/>q.y,<sp/>q.z,<sp/>q.w);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>COMPILE_getRotate_David_Spillings_Mk1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>COMPILE_getRotate_David_Spillings_Mk2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPILE_getRotate_Original</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>COMPILE_getRotate_David_Spillings_Mk1</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>David<sp/>Spillings<sp/>implementation<sp/>Mk<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="classof_matrix4x4_1a421494de45410607d28f0da9ca413001" kindref="member">ofMatrix4x4::getRotate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="177"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tq[4];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>tq<sp/>to<sp/>store<sp/>the<sp/>largest<sp/>trace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>tq[0]<sp/>=<sp/>1<sp/>+<sp/><ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]+<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]+<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>tq[1]<sp/>=<sp/>1<sp/>+<sp/>_mat[0][0]-_mat[1][1]-_mat[2][2];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>tq[2]<sp/>=<sp/>1<sp/>-<sp/>_mat[0][0]+_mat[1][1]-_mat[2][2];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>tq[3]<sp/>=<sp/>1<sp/>-<sp/>_mat[0][0]-_mat[1][1]+_mat[2][2];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>maximum<sp/>(could<sp/>also<sp/>use<sp/>stacked<sp/>if&apos;s<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;4;i++)<sp/>j<sp/>=<sp/>(tq[i]&gt;tq[j])?<sp/>i<sp/>:<sp/>j;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j==0)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>perform<sp/>instant<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>=<sp/>tq[0];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/>_mat[1][2]-_mat[2][1];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/>_mat[2][0]-_mat[0][2];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/>_mat[0][1]-_mat[1][0];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j==1)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>=<sp/>_mat[1][2]-_mat[2][1];</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/>tq[1];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/>_mat[0][1]+_mat[1][0];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/>_mat[2][0]+_mat[0][2];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j==2)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>=<sp/>_mat[2][0]-_mat[0][2];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/>_mat[0][1]+_mat[1][0];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/>tq[2];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/>_mat[1][2]+_mat[2][1];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>(j==3)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>=<sp/>_mat[0][1]-_mat[1][0];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/>_mat[2][0]+_mat[0][2];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/>_mat[1][2]+_mat[2][1];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/>tq[3];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sqrt(0.25/tq[j]);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>*=<sp/>s;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>*=<sp/>s;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>*=<sp/>s;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>*=<sp/>s;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>COMPILE_getRotate_David_Spillings_Mk2</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>David<sp/>Spillings<sp/>implementation<sp/>Mk<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="classof_matrix4x4_1a421494de45410607d28f0da9ca413001" kindref="member">ofMatrix4x4::getRotate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="240"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>=<sp/>0.5<sp/>*<sp/>sqrt(<sp/>osg::maximum(<sp/>0.0,<sp/>1.0<sp/>+<sp/>_mat[0][0]<sp/>+<sp/>_mat[1][1]<sp/>+<sp/>_mat[2][2]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/>0.5<sp/>*<sp/>sqrt(<sp/>osg::maximum(<sp/>0.0,<sp/>1.0<sp/>+<sp/>_mat[0][0]<sp/>-<sp/>_mat[1][1]<sp/>-<sp/>_mat[2][2]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/>0.5<sp/>*<sp/>sqrt(<sp/>osg::maximum(<sp/>0.0,<sp/>1.0<sp/>-<sp/>_mat[0][0]<sp/>+<sp/>_mat[1][1]<sp/>-<sp/>_mat[2][2]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/>0.5<sp/>*<sp/>sqrt(<sp/>osg::maximum(<sp/>0.0,<sp/>1.0<sp/>-<sp/>_mat[0][0]<sp/>-<sp/>_mat[1][1]<sp/>+<sp/>_mat[2][2]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Robert<sp/>Osfield,<sp/>June<sp/>7th<sp/>2007,<sp/>arggg<sp/>this<sp/>new<sp/>implementation<sp/>produces<sp/>many<sp/>many<sp/>errors,<sp/>so<sp/>have<sp/>to<sp/>revert<sp/>to<sp/>sign(..)<sp/>orignal<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>*<sp/>osg::signOrZero(<sp/><sp/>_mat[1][2]<sp/>-<sp/>_mat[2][1])<sp/>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>*<sp/>osg::signOrZero(<sp/><sp/>_mat[2][0]<sp/>-<sp/>_mat[0][2])<sp/>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>*<sp/>osg::signOrZero(<sp/><sp/>_mat[0][1]<sp/>-<sp/>_mat[1][0])<sp/>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>*<sp/>osg::sign(<sp/><sp/>_mat[1][2]<sp/>-<sp/>_mat[2][1])<sp/>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>*<sp/>osg::sign(<sp/><sp/>_mat[2][0]<sp/>-<sp/>_mat[0][2])<sp/>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>*<sp/>osg::sign(<sp/><sp/>_mat[0][1]<sp/>-<sp/>_mat[1][0])<sp/>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>COMPILE_getRotate_Original</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Original<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="classof_matrix4x4_1a421494de45410607d28f0da9ca413001" kindref="member">ofMatrix4x4::getRotate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="267"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Source:<sp/>Gamasutra,<sp/>Rotating<sp/>Objects<sp/>Using<sp/>Quaternions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//http://www.gamasutra.com/features/programming/19980703/quaternions_01.htm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>tr,<sp/>s;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tq[4];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nxt[3]<sp/>=<sp/>{1,<sp/>2,<sp/>0};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>_mat[0][0]<sp/>+<sp/>_mat[1][1]<sp/>+<sp/>_mat[2][2]+1.0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tr<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(float)sqrt<sp/>(tr);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>=<sp/>s<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0.5<sp/>/<sp/>s;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/>(_mat[1][2]<sp/>-<sp/>_mat[2][1])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/>(_mat[2][0]<sp/>-<sp/>_mat[0][2])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/>(_mat[0][1]<sp/>-<sp/>_mat[1][0])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>diagonal<sp/>is<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_mat[1][1]<sp/>&gt;<sp/>_mat[0][0])</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_mat[2][2]<sp/>&gt;<sp/>_mat[i][i])</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>nxt[i];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>nxt[j];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(float)sqrt<sp/>((_mat[i][i]<sp/>-<sp/>(_mat[j][j]<sp/>+<sp/>_mat[k][k]))<sp/>+<sp/>1.0);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tq[i]<sp/>=<sp/>s<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0.5<sp/>/<sp/>s;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tq[3]<sp/>=<sp/>(_mat[j][k]<sp/>-<sp/>_mat[k][j])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tq[j]<sp/>=<sp/>(_mat[i][j]<sp/>+<sp/>_mat[j][i])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tq[k]<sp/>=<sp/>(_mat[i][k]<sp/>+<sp/>_mat[k][i])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a04a0d8def88b04f2b6f8815bb1d24c1e" kindref="member">QX</ref><sp/>=<sp/>tq[0];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7bf57bbf7c055968b28b94ee9f7644ef" kindref="member">QY</ref><sp/>=<sp/>tq[1];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a19c48e47bd4a4ecc43d73cebcbd30c59" kindref="member">QZ</ref><sp/>=<sp/>tq[2];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a02b7c35a051ef13230cdb4a51609543f" kindref="member">QW</ref><sp/>=<sp/>tq[3];</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>ofMatrix4x4::compare(const<sp/>ofMatrix4x4&amp;<sp/>m)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>ofMatrix4x4::float*<sp/>lhs<sp/>=<sp/>reinterpret_cast&lt;const<sp/>ofMatrix4x4::float*&gt;(_mat);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>ofMatrix4x4::float*<sp/>end_lhs<sp/>=<sp/>lhs+16;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>ofMatrix4x4::float*<sp/>rhs<sp/>=<sp/>reinterpret_cast&lt;const<sp/>ofMatrix4x4::float*&gt;(m._mat);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for(;lhs!=end_lhs;++lhs,++rhs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(*lhs<sp/>&lt;<sp/>*rhs)<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(*rhs<sp/>&lt;<sp/>*lhs)<sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a9ff434ad5b8080dbc872e967bf143223" kindref="member">ofMatrix4x4::setTranslation</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ty,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tz<sp/>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][0]<sp/>=<sp/>tx;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][1]<sp/>=<sp/>ty;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][2]<sp/>=<sp/>tz;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a9ff434ad5b8080dbc872e967bf143223" kindref="member">ofMatrix4x4::setTranslation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][0]<sp/>=<sp/>v.<ref refid="classof_vec3f_1a224d6448415fe4cb729f18d7281329d4" kindref="member">getPtr</ref>()[0];</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][1]<sp/>=<sp/>v.<ref refid="classof_vec3f_1a224d6448415fe4cb729f18d7281329d4" kindref="member">getPtr</ref>()[1];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][2]<sp/>=<sp/>v.<ref refid="classof_vec3f_1a224d6448415fe4cb729f18d7281329d4" kindref="member">getPtr</ref>()[2];</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a71ccf099ef90bf64fd554c03e3c50036" kindref="member">ofMatrix4x4::makeIdentityMatrix</ref>()</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(0,<sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(1,<sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(2,<sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>1,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(3,<sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>::<ref refid="classof_matrix4x4_1a1ca6dcc64e5945716c02c46e6181e971" kindref="member">makeScaleMatrix</ref>(<sp/>const<sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a1ca6dcc64e5945716c02c46e6181e971" kindref="member">makeScaleMatrix</ref>(v.getPtr()[0],<sp/>v.getPtr()[1],<sp/>v.getPtr()[2]<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a1ca6dcc64e5945716c02c46e6181e971" kindref="member">ofMatrix4x4::makeScaleMatrix</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(0,<sp/><sp/><sp/><sp/>x,<sp/>0,<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(1,<sp/><sp/><sp/><sp/>0,<sp/>y,<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(2,<sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>z,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(3,<sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>::<ref refid="classof_matrix4x4_1a08c9901867c1a4fb113ce8cf7cad8a0f" kindref="member">makeTranslationMatrix</ref>(<sp/>const<sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a08c9901867c1a4fb113ce8cf7cad8a0f" kindref="member">makeTranslationMatrix</ref>(<sp/>v.getPtr()[0],<sp/>v.getPtr()[1],<sp/>v.getPtr()[2]<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a08c9901867c1a4fb113ce8cf7cad8a0f" kindref="member">ofMatrix4x4::makeTranslationMatrix</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(0,<sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(1,<sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(2,<sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>1,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(3,<sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>z,<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>::<ref refid="classof_matrix4x4_1a2b624fa64ef1b27199129c9e9cf9d6d5" kindref="member">makeRotationMatrix</ref>(<sp/>const<sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>from,<sp/>const<sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>to<sp/>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a71ccf099ef90bf64fd554c03e3c50036" kindref="member">makeIdentityMatrix</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>quat;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>quat.<ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(from,to);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1ace388ef9b8c18c25e541d01711587187" kindref="member">setRotate</ref>(quat);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a2b624fa64ef1b27199129c9e9cf9d6d5" kindref="member">ofMatrix4x4::makeRotationMatrix</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>axis<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a71ccf099ef90bf64fd554c03e3c50036" kindref="member">makeIdentityMatrix</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>quat;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>quat.<ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(<sp/>angle,<sp/>axis);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1ace388ef9b8c18c25e541d01711587187" kindref="member">setRotate</ref>(quat);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a2b624fa64ef1b27199129c9e9cf9d6d5" kindref="member">ofMatrix4x4::makeRotationMatrix</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a71ccf099ef90bf64fd554c03e3c50036" kindref="member">makeIdentityMatrix</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>quat;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>quat.<ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(<sp/>angle,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1ace388ef9b8c18c25e541d01711587187" kindref="member">setRotate</ref>(quat);</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a2b624fa64ef1b27199129c9e9cf9d6d5" kindref="member">ofMatrix4x4::makeRotationMatrix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref>&amp;<sp/>quat<sp/>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a71ccf099ef90bf64fd554c03e3c50036" kindref="member">makeIdentityMatrix</ref>();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1ace388ef9b8c18c25e541d01711587187" kindref="member">setRotate</ref>(quat);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a2b624fa64ef1b27199129c9e9cf9d6d5" kindref="member">ofMatrix4x4::makeRotationMatrix</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>axis1,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>axis2,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>axis3)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a71ccf099ef90bf64fd554c03e3c50036" kindref="member">makeIdentityMatrix</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>quat;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>quat.<ref refid="classof_quaternion_1a5016a3ee4571fe53277e8a362ee11ab0" kindref="member">makeRotate</ref>(angle1,<sp/>axis1,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle2,<sp/>axis2,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle3,<sp/>axis3);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1ace388ef9b8c18c25e541d01711587187" kindref="member">setRotate</ref>(quat);</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a0533e0a00e3e36a380d0c5419939849d" kindref="member">ofMatrix4x4::makeFromMultiplicationOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;lhs==</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a23de2543b0d37aff68c23948f483a45a" kindref="member">postMult</ref>(rhs);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;rhs==</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a65d6cb4adba911a0a119d1c0a3386c60" kindref="member">preMult</ref>(lhs);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRECONDITION:<sp/>We<sp/>assume<sp/>neither<sp/>&amp;lhs<sp/>nor<sp/>&amp;rhs<sp/>==<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>did,<sp/>use<sp/>preMult<sp/>or<sp/>postMult<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[0][0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[0][1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[0][2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[0][3]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>0,<sp/>3);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[1][0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[1][1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[1][2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[1][3]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>1,<sp/>3);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[2][0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[2][1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[2][2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>2,<sp/>2);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[2][3]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>2,<sp/>3);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>3,<sp/>1);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>3,<sp/>2);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][3]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(lhs,<sp/>rhs,<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a65d6cb4adba911a0a119d1c0a3386c60" kindref="member">ofMatrix4x4::preMult</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>other<sp/>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>brute<sp/>force<sp/>method<sp/>requiring<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ofMatrix4x4<sp/>tmp(other*<sp/>*this);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*this<sp/>=<sp/>tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>efficient<sp/>method<sp/>just<sp/>use<sp/>a<sp/>float[4]<sp/>for<sp/>temporary<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t[4];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;4;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(<sp/>other,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/>col<sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(<sp/>other,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>1,<sp/>col<sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(<sp/>other,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>2,<sp/>col<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[3]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(<sp/>other,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>3,<sp/>col<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0][col]<sp/>=<sp/>t[0];</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1][col]<sp/>=<sp/>t[1];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2][col]<sp/>=<sp/>t[2];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[3][col]<sp/>=<sp/>t[3];</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a23de2543b0d37aff68c23948f483a45a" kindref="member">ofMatrix4x4::postMult</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>other<sp/>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>brute<sp/>force<sp/>method<sp/>requiring<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ofMatrix4x4<sp/>tmp(*this<sp/>*<sp/>other);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*this<sp/>=<sp/>tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>efficient<sp/>method<sp/>just<sp/>use<sp/>a<sp/>float[4]<sp/>for<sp/>temporary<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t[4];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=0;<sp/>row&lt;4;<sp/>++row)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>other,<sp/>row,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>other,<sp/>row,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>other,<sp/>row,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[3]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1ada0b48f1a40e43e30ec4e714aa37122d" kindref="member">INNER_PRODUCT</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>other,<sp/>row,<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(row,<sp/>t[0],<sp/>t[1],<sp/>t[2],<sp/>t[3]<sp/>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>INNER_PRODUCT</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/>orthoNormalize<sp/>the<sp/>3x3<sp/>rotation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1aaadfb76b67b5839bb595066e7a2f0274" kindref="member">ofMatrix4x4::makeOrthoNormalOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_colMag<sp/>=<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0])<sp/>+<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0])<sp/>+<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_colMag<sp/>=<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1])<sp/>+<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1])<sp/>+<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_colMag<sp/>=<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2])<sp/>+<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2])<sp/>+<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]<sp/>*<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="of_matrix4x4_8cpp_1a9e1ededea011718cda2bc5c76bd49335" kindref="member">equivalent</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x_colMag,<sp/>1.0)<sp/>&amp;&amp;<sp/>!<ref refid="of_matrix4x4_8cpp_1a9e1ededea011718cda2bc5c76bd49335" kindref="member">equivalent</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x_colMag,<sp/>0.0))</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_colMag<sp/>=<sp/>sqrt(x_colMag);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0][0]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>/<sp/>x_colMag;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1][0]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0]<sp/>/<sp/>x_colMag;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2][0]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]<sp/>/<sp/>x_colMag;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0][0]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1][0]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2][0]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="of_matrix4x4_8cpp_1a9e1ededea011718cda2bc5c76bd49335" kindref="member">equivalent</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)y_colMag,<sp/>1.0)<sp/>&amp;&amp;<sp/>!<ref refid="of_matrix4x4_8cpp_1a9e1ededea011718cda2bc5c76bd49335" kindref="member">equivalent</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)y_colMag,<sp/>0.0))</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_colMag<sp/>=<sp/>sqrt(y_colMag);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0][1]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>/<sp/>y_colMag;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1][1]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]<sp/>/<sp/>y_colMag;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2][1]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]<sp/>/<sp/>y_colMag;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0][1]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1];</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1][1]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2][1]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1];</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="of_matrix4x4_8cpp_1a9e1ededea011718cda2bc5c76bd49335" kindref="member">equivalent</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)z_colMag,<sp/>1.0)<sp/>&amp;&amp;<sp/>!<ref refid="of_matrix4x4_8cpp_1a9e1ededea011718cda2bc5c76bd49335" kindref="member">equivalent</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)z_colMag,<sp/>0.0))</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_colMag<sp/>=<sp/>sqrt(z_colMag);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0][2]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]<sp/>/<sp/>z_colMag;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1][2]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2]<sp/>/<sp/>z_colMag;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2][2]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]<sp/>/<sp/>z_colMag;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0][2]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2];</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1][2]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2];</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2][2]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2];</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][0]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][0];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][1]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][1];</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][2]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][2];</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[0][3]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][3];</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[1][3]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][3];</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[2][3]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][3];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>_mat[3][3]<sp/>=<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][3];</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a19160f01f02f713b3629b623a24cade7" kindref="member">invert_4x3</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>src,<sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>&amp;<sp/>dst);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a4953e5dc8d1015af720c28d043b66161" kindref="member">invert_4x4</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>rhs,<sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>&amp;<sp/>dst);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a443f5350825e494808bad13c31eeb88b" kindref="member">ofMatrix4x4::makeInvertOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>&amp;<sp/>rhs){</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_4x3<sp/>=<sp/>(rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][3]<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][3]<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/><sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][3]<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>rhs.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][3]<sp/>==<sp/>1.0f);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_4x3<sp/>?<sp/><ref refid="of_matrix4x4_8cpp_1a19160f01f02f713b3629b623a24cade7" kindref="member">invert_4x3</ref>(rhs,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>:<sp/><sp/><ref refid="of_matrix4x4_8cpp_1a4953e5dc8d1015af720c28d043b66161" kindref="member">invert_4x4</ref>(rhs,*this);</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/><ref refid="classof_matrix4x4_1acb2492d77ffa5e4fa70b378874d81fe3" kindref="member">ofMatrix4x4::getInverse</ref>()</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>inverse;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse.<ref refid="classof_matrix4x4_1a443f5350825e494808bad13c31eeb88b" kindref="member">makeInvertOf</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inverse;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">/******************************************</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>Matrix<sp/>inversion<sp/>technique:</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>Given<sp/>a<sp/>matrix<sp/>mat,<sp/>we<sp/>want<sp/>to<sp/>invert<sp/>it.</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>mat<sp/>=<sp/>[<sp/>r00<sp/>r01<sp/>r02<sp/>a</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>r10<sp/>r11<sp/>r12<sp/>b</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>r20<sp/>r21<sp/>r22<sp/>c</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>tx<sp/><sp/>ty<sp/><sp/>tz<sp/><sp/>d<sp/>]</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>We<sp/>note<sp/>that<sp/>this<sp/>matrix<sp/>can<sp/>be<sp/>split<sp/>into<sp/>three<sp/>matrices.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>mat<sp/>=<sp/>rot<sp/>*<sp/>trans<sp/>*<sp/>corr,<sp/>where<sp/>rot<sp/>is<sp/>rotation<sp/>part,<sp/>trans<sp/>is<sp/>translation<sp/>part,<sp/>and<sp/>corr<sp/>is<sp/>the<sp/>correction<sp/>due<sp/>to<sp/>perspective<sp/>(if<sp/>any).</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>rot<sp/>=<sp/>[<sp/>r00<sp/>r01<sp/>r02<sp/>0</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>r10<sp/>r11<sp/>r12<sp/>0</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>r20<sp/>r21<sp/>r22<sp/>0</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/>]</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>trans<sp/>=<sp/>[<sp/>1<sp/><sp/>0<sp/><sp/>0<sp/><sp/>0</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>0<sp/><sp/>1<sp/><sp/>0<sp/><sp/>0</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>0<sp/><sp/>0<sp/><sp/>1<sp/><sp/>0</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>tx<sp/>ty<sp/>tz<sp/>1<sp/>]</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>corr<sp/>=<sp/>[<sp/>1<sp/>0<sp/>0<sp/>px</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>0<sp/>1<sp/>0<sp/>py</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>0<sp/>0<sp/>1<sp/>pz</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>0<sp/>0<sp/>0<sp/>s<sp/>]</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>where<sp/>the<sp/>elements<sp/>of<sp/>corr<sp/>are<sp/>obtained<sp/>from<sp/>linear<sp/>combinations<sp/>of<sp/>the<sp/>elements<sp/>of<sp/>rot,<sp/>trans,<sp/>and<sp/>mat.</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>So<sp/>the<sp/>inverse<sp/>is<sp/>mat&apos;<sp/>=<sp/>(trans<sp/>*<sp/>corr)&apos;<sp/>*<sp/>rot&apos;,<sp/>where<sp/>rot&apos;<sp/>must<sp/>be<sp/>computed<sp/>the<sp/>traditional<sp/>way,<sp/>which<sp/>is<sp/>easy<sp/>since<sp/>it<sp/>is<sp/>only<sp/>a<sp/>3x3<sp/>matrix.</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>This<sp/>problem<sp/>is<sp/>simplified<sp/>if<sp/>[px<sp/>py<sp/>pz<sp/>s]<sp/>=<sp/>[0<sp/>0<sp/>0<sp/>1],<sp/>which<sp/>will<sp/>happen<sp/>if<sp/>mat<sp/>was<sp/>composed<sp/>only<sp/>of<sp/>rotations,<sp/>scales,<sp/>and<sp/>translations<sp/>(which<sp/>is<sp/>common).<sp/><sp/>In<sp/>this<sp/>case,<sp/>we<sp/>can<sp/>ignore<sp/>corr<sp/>entirely<sp/>which<sp/>saves<sp/>on<sp/>a<sp/>lot<sp/>of<sp/>computations.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a19160f01f02f713b3629b623a24cade7" kindref="member">invert_4x3</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>src,<sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>&amp;<sp/>dst<sp/>)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;src==&amp;dst)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>tm(src);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a19160f01f02f713b3629b623a24cade7" kindref="member">invert_4x3</ref>(tm,dst);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r00,<sp/>r01,<sp/>r02,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r10,<sp/>r11,<sp/>r12,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r20,<sp/>r21,<sp/>r22;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>rotation<sp/>components<sp/>directly<sp/>into<sp/>registers<sp/>for<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>r00<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0];<sp/>r01<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1];<sp/>r02<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2];</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>r10<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0];<sp/>r11<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1];<sp/>r12<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2];</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>r20<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0];<sp/>r21<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1];<sp/>r22<sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2];</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Partially<sp/>compute<sp/>inverse<sp/>of<sp/>rot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>=<sp/>r11*r22<sp/>-<sp/>r12*r21;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>=<sp/>r02*r21<sp/>-<sp/>r01*r22;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]<sp/>=<sp/>r01*r12<sp/>-<sp/>r02*r11;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>determinant<sp/>of<sp/>rot<sp/>from<sp/>3<sp/>elements<sp/>just<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one_over_det<sp/>=<sp/>1.0/(r00*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>+<sp/>r10*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>+<sp/>r20*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>r00<sp/>*=<sp/>one_over_det;<sp/>r10<sp/>*=<sp/>one_over_det;<sp/>r20<sp/>*=<sp/>one_over_det;<sp/><sp/></highlight><highlight class="comment">//<sp/>Saves<sp/>on<sp/>later<sp/>computations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>computing<sp/>inverse<sp/>of<sp/>rot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>*=<sp/>one_over_det;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>*=<sp/>one_over_det;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]<sp/>*=<sp/>one_over_det;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0]<sp/>=<sp/>r12*r20<sp/>-<sp/>r10*r22;<sp/></highlight><highlight class="comment">//<sp/>Have<sp/>already<sp/>been<sp/>divided<sp/>by<sp/>det</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]<sp/>=<sp/>r00*r22<sp/>-<sp/>r02*r20;<sp/></highlight><highlight class="comment">//<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2]<sp/>=<sp/>r02*r10<sp/>-<sp/>r00*r12;<sp/></highlight><highlight class="comment">//<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]<sp/>=<sp/>r10*r21<sp/>-<sp/>r11*r20;<sp/></highlight><highlight class="comment">//<sp/>Have<sp/>already<sp/>been<sp/>divided<sp/>by<sp/>det</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]<sp/>=<sp/>r01*r20<sp/>-<sp/>r00*r21;<sp/></highlight><highlight class="comment">//<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]<sp/>=<sp/>r00*r11<sp/>-<sp/>r01*r10;<sp/></highlight><highlight class="comment">//<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][3]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>no<sp/>longer<sp/>need<sp/>the<sp/>rxx<sp/>or<sp/>det<sp/>variables<sp/>anymore,<sp/>so<sp/>we<sp/>can<sp/>reuse<sp/>them<sp/>for<sp/>whatever<sp/>we<sp/>want.<sp/><sp/>But<sp/>we<sp/>will<sp/>still<sp/>rename<sp/>them<sp/>for<sp/>the<sp/>sake<sp/>of<sp/>clarity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>d<sp/>r22</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_polyline_8cpp_1ae629cf86d3fc5a1280de48f9c0efeb13" kindref="member">d</ref><sp/><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][3];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="of_matrix4x4_8cpp_1a10734ff8d95f344600432b0333f3005f" kindref="member">square</ref>(d-1.0)<sp/>&gt;<sp/>1.0e-6<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>Involves<sp/>perspective,<sp/>so<sp/>we<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>full<sp/>inverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>TPinv;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][0]<sp/>=<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][1]<sp/>=<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>px<sp/>r00</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>py<sp/>r01</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>pz<sp/>r02</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>one_over_s<sp/><sp/>one_over_det</highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>a<sp/><sp/>r10</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>b<sp/><sp/>r11</highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>c<sp/><sp/>r12</highlight></codeline>
<codeline lineno="673"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][3];<sp/><ref refid="of_matrix4x4_8cpp_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][3];<sp/><ref refid="of_matrix4x4_8cpp_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][3];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a202a282799ace8d7de6aa1f699ef546d" kindref="member">px</ref><sp/>=<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]*<ref refid="of_matrix4x4_8cpp_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>+<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]*<ref refid="of_matrix4x4_8cpp_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>+<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]*<ref refid="of_matrix4x4_8cpp_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a7284a3e64f3c6d8d549a591c5208aedd" kindref="member">py</ref><sp/>=<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0]*<ref refid="of_matrix4x4_8cpp_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>+<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]*<ref refid="of_matrix4x4_8cpp_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>+<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2]*<ref refid="of_matrix4x4_8cpp_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a3dc06ac98e72b809b5ff6daf0a442c37" kindref="member">pz</ref><sp/>=<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]*<ref refid="of_matrix4x4_8cpp_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>+<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]*<ref refid="of_matrix4x4_8cpp_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>+<sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]*<ref refid="of_matrix4x4_8cpp_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>a</highlight></codeline>
<codeline lineno="680"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>b</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>c</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>tx<sp/>r10</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ty<sp/>r11</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>tz<sp/>r12</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][0];<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][1];<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][2];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a61d163a084801954001135cba8afd5e3" kindref="member">one_over_s</ref><sp/><sp/>=<sp/>1.0/(<ref refid="of_polyline_8cpp_1ae629cf86d3fc5a1280de48f9c0efeb13" kindref="member">d</ref><sp/>-<sp/>(<ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref>*<ref refid="of_matrix4x4_8cpp_1a202a282799ace8d7de6aa1f699ef546d" kindref="member">px</ref><sp/>+<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref>*<ref refid="of_matrix4x4_8cpp_1a7284a3e64f3c6d8d549a591c5208aedd" kindref="member">py</ref><sp/>+<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref>*<ref refid="of_matrix4x4_8cpp_1a3dc06ac98e72b809b5ff6daf0a442c37" kindref="member">pz</ref>));</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref><sp/>*=<sp/><ref refid="of_matrix4x4_8cpp_1a61d163a084801954001135cba8afd5e3" kindref="member">one_over_s</ref>;<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref><sp/>*=<sp/><ref refid="of_matrix4x4_8cpp_1a61d163a084801954001135cba8afd5e3" kindref="member">one_over_s</ref>;<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref><sp/>*=<sp/><ref refid="of_matrix4x4_8cpp_1a61d163a084801954001135cba8afd5e3" kindref="member">one_over_s</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Reduces<sp/>number<sp/>of<sp/>calculations<sp/>later<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>inverse<sp/>of<sp/>trans*corr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref>*<ref refid="of_matrix4x4_8cpp_1a202a282799ace8d7de6aa1f699ef546d" kindref="member">px</ref><sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref>*<ref refid="of_matrix4x4_8cpp_1a202a282799ace8d7de6aa1f699ef546d" kindref="member">px</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref>*px;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][3]<sp/>=<sp/>-px<sp/>*<sp/><ref refid="of_matrix4x4_8cpp_1a61d163a084801954001135cba8afd5e3" kindref="member">one_over_s</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref>*<ref refid="of_matrix4x4_8cpp_1a7284a3e64f3c6d8d549a591c5208aedd" kindref="member">py</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref>*py<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref>*py;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][3]<sp/>=<sp/>-py<sp/>*<sp/>one_over_s;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref>*<ref refid="of_matrix4x4_8cpp_1a3dc06ac98e72b809b5ff6daf0a442c37" kindref="member">pz</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref>*pz;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref>*pz<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][3]<sp/>=<sp/>-pz<sp/>*<sp/>one_over_s;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][0]<sp/>=<sp/>-<ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref>;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][1]<sp/>=<sp/>-<ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][2]<sp/>=<sp/>-<ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPinv.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][3]<sp/>=<sp/>one_over_s;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a65d6cb4adba911a0a119d1c0a3386c60" kindref="member">preMult</ref>(TPinv);<sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>computing<sp/>full<sp/>inverse<sp/>of<sp/>mat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>px</highlight></codeline>
<codeline lineno="712"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>py</highlight></codeline>
<codeline lineno="713"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>pz</highlight></codeline>
<codeline lineno="714"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>one_over_s</highlight></codeline>
<codeline lineno="715"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>d</highlight></codeline>
<codeline lineno="716"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Rightmost<sp/>column<sp/>is<sp/>[0;<sp/>0;<sp/>0;<sp/>1]<sp/>so<sp/>it<sp/>can<sp/>be<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][0];<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][1];<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref><sp/>=<sp/>src.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][2];</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>translation<sp/>components<sp/>of<sp/>mat&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][0]<sp/>=<sp/>-(<ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][0]<sp/>+<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][0]<sp/>+<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][0]);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][1]<sp/>=<sp/>-(<ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][1]<sp/>+<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][1]<sp/>+<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][1]);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[3][2]<sp/>=<sp/>-(<ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[0][2]<sp/>+<sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[1][2]<sp/>+<sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref>*dst.<ref refid="classof_matrix4x4_1a28dd7ff5eee745c3ccd17e706fb7df54" kindref="member">_mat</ref>[2][2]);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>tx</highlight></codeline>
<codeline lineno="727"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>ty</highlight></codeline>
<codeline lineno="728"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>tz</highlight></codeline>
<codeline lineno="729"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="of_matrix4x4_8cpp_1a1118c8ee1dedb8a5cd9bd4af02ed8982" kindref="member">SGL_ABS</ref>(T<sp/>a)</highlight></codeline>
<codeline lineno="737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&gt;=<sp/>0<sp/>?<sp/>a<sp/>:<sp/>-a);</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SGL_SWAP</highlight></codeline>
<codeline lineno="742"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SGL_SWAP(a,b,temp)<sp/>((temp)=(a),(a)=(b),(b)=(temp))</highlight></codeline>
<codeline lineno="743"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="744"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a4953e5dc8d1015af720c28d043b66161" kindref="member">invert_4x4</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;<sp/>src,<sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>&amp;dst<sp/>)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;src==&amp;dst)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>tm(src);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a4953e5dc8d1015af720c28d043b66161" kindref="member">invert_4x4</ref>(tm,dst);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indxc[4],<sp/>indxr[4],<sp/>ipiv[4];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k,l,ll;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp,<sp/>pivinv,<sp/>dum,<sp/>big;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>in<sp/>place<sp/>this<sp/>may<sp/>be<sp/>unnecessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;4;<sp/>j++)<sp/>ipiv[j]=0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;4;i++)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>big=0.0;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;4;<sp/>j++)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ipiv[j]<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;4;<sp/>k++)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ipiv[k]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="of_matrix4x4_8cpp_1a1118c8ee1dedb8a5cd9bd4af02ed8982" kindref="member">SGL_ABS</ref>(dst(j,k))<sp/>&gt;=<sp/>big)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>big<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a1118c8ee1dedb8a5cd9bd4af02ed8982" kindref="member">SGL_ABS</ref>(dst(j,k));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irow=j;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icol=k;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ipiv[k]<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(ipiv[icol]);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(irow<sp/>!=<sp/>icol)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l=0;<sp/>l&lt;4;<sp/>l++)<sp/><ref refid="of_matrix4x4_8cpp_1a5de24d5109e4b658face7fa8b5b94286" kindref="member">SGL_SWAP</ref>(dst(irow,l),</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst(icol,l),</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indxr[i]=irow;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indxc[i]=icol;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst(icol,icol)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pivinv<sp/>=<sp/>1.0/dst(icol,icol);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst(icol,icol)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l=0;<sp/>l&lt;4;<sp/>l++)<sp/>dst(icol,l)<sp/>*=<sp/>pivinv;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ll=0;<sp/>ll&lt;4;<sp/>ll++)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ll<sp/>!=<sp/>icol)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dum=dst(ll,icol);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst(ll,icol)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l=0;<sp/>l&lt;4;<sp/>l++)dst(ll,l)<sp/>-=<sp/>dst(icol,l)*dum;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lx=4;<sp/>lx&gt;0;<sp/>--lx)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indxr[lx-1]<sp/>!=<sp/>indxc[lx-1])</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;4;<sp/>k++)<sp/><ref refid="of_matrix4x4_8cpp_1a5de24d5109e4b658face7fa8b5b94286" kindref="member">SGL_SWAP</ref>(dst(k,indxr[lx-1]),</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst(k,indxc[lx-1]),temp);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1ac4308822795d32eaa2d4c5fffd5a59b2" kindref="member">ofMatrix4x4::makeOrthoMatrix</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>right,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bottom,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>top,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zNear,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zFar)</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>transpose<sp/>of<sp/>ofMatrix4x4<sp/>wr.t<sp/>OpenGL<sp/>documentation,<sp/>since<sp/>the<sp/>OSG<sp/>use<sp/>post<sp/>multiplication<sp/>rather<sp/>than<sp/>pre.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a71fddcd22d23e1d7755f279139eafbd8" kindref="member">tx</ref><sp/>=<sp/>-(right+left)/(right-left);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a903967929e0810d32310eba0bb74f733" kindref="member">ty</ref><sp/>=<sp/>-(top+bottom)/(top-bottom);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1aa990489b3ee70b6559eb8bf3da0831f6" kindref="member">tz</ref><sp/>=<sp/>-(zFar+zNear)/(zFar-zNear);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(0,<sp/>2.0/(right-left),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/>2.0/(top-bottom),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/>-2.0/(zFar-zNear),<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tz,<sp/>1.0<sp/>)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>::<ref refid="classof_matrix4x4_1a9cd4cf708daabc929d99cf1b5e626bf8" kindref="member">getOrtho</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>left,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>right,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>bottom,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>top,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zNear,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zFar)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="831"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_mat[0][3]!=0.0<sp/>||<sp/>_mat[1][3]!=0.0<sp/>||<sp/>_mat[2][3]!=0.0<sp/>||<sp/>_mat[3][3]!=1.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>zNear<sp/>=<sp/>(_mat[3][2]+1.0)<sp/>/<sp/>_mat[2][2];</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>zFar<sp/>=<sp/>(_mat[3][2]-1.0)<sp/>/<sp/>_mat[2][2];</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>left<sp/>=<sp/>-(1.0+_mat[3][0])<sp/>/<sp/>_mat[0][0];</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>=<sp/>(1.0-_mat[3][0])<sp/>/<sp/>_mat[0][0];</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>-(1.0+_mat[3][1])<sp/>/<sp/>_mat[1][1];</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>top<sp/>=<sp/>(1.0-_mat[3][1])<sp/>/<sp/>_mat[1][1];</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a7ba822771fcaeff664916c49a505f034" kindref="member">ofMatrix4x4::makeFrustumMatrix</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>right,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bottom,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>top,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zNear,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zFar)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>transpose<sp/>of<sp/>ofMatrix4x4<sp/>wr.t<sp/>OpenGL<sp/>documentation,<sp/>since<sp/>the<sp/>OSG<sp/>use<sp/>post<sp/>multiplication<sp/>rather<sp/>than<sp/>pre.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>(right+left)/(right-left);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B<sp/>=<sp/>(top+bottom)/(top-bottom);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C<sp/>=<sp/>-(zFar+zNear)/(zFar-zNear);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>D<sp/>=<sp/>-2.0*zFar*zNear/(zFar-zNear);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5af4a10ee99f3036e57ebb4a3abbc769" kindref="member">SET_ROW</ref>(0,<sp/>2.0*zNear/(right-left),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/><sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>2.0*zNear/(top-bottom),<sp/>0.0,<sp/><sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B,<sp/><sp/><sp/>C,<sp/>-1.0<sp/>)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_ROW(3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/>D,<sp/><sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref>::<ref refid="classof_matrix4x4_1aa191919c9afb4ac6091bd0febf9d34e7" kindref="member">getFrustum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>left,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>right,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>bottom,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>top,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zNear,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zFar)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="865"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_mat[0][3]!=0.0<sp/>||<sp/>_mat[1][3]!=0.0<sp/>||<sp/>_mat[2][3]!=-1.0<sp/>||<sp/>_mat[3][3]!=0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>zNear<sp/>=<sp/>_mat[3][2]<sp/>/<sp/>(_mat[2][2]-1.0);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>zFar<sp/>=<sp/>_mat[3][2]<sp/>/<sp/>(1.0+_mat[2][2]);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>left<sp/>=<sp/>zNear<sp/>*<sp/>(_mat[2][0]-1.0)<sp/>/<sp/>_mat[0][0];</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>=<sp/>zNear<sp/>*<sp/>(1.0+_mat[2][0])<sp/>/<sp/>_mat[0][0];</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>top<sp/>=<sp/>zNear<sp/>*<sp/>(1.0+_mat[2][1])<sp/>/<sp/>_mat[1][1];</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>zNear<sp/>*<sp/>(_mat[2][1]-1.0)<sp/>/<sp/>_mat[1][1];</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a5fd80395dcd3303cd7630610d91e8308" kindref="member">ofMatrix4x4::makePerspectiveMatrix</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fovy,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aspectRatio,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zNear,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zFar)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>appropriate<sp/>left,<sp/>right<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tan_fovy<sp/>=<sp/>tan(fovy*0.5*<ref refid="of_constants_8h_1a212460e743fecb084d717bb2180c5a56" kindref="member">DEG_TO_RAD</ref>);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>right<sp/><sp/>=<sp/><sp/>tan_fovy<sp/>*<sp/>aspectRatio<sp/>*<sp/>zNear;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>left<sp/><sp/><sp/>=<sp/>-right;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>top<sp/><sp/><sp/><sp/>=<sp/><sp/>tan_fovy<sp/>*<sp/>zNear;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/><sp/>-top;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4_1a7ba822771fcaeff664916c49a505f034" kindref="member">makeFrustumMatrix</ref>(left,right,bottom,top,zNear,zFar);</highlight></codeline>
<codeline lineno="892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1ae2847b993f55559c4930ac354904afe2" kindref="member">ofMatrix4x4::getPerspective</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>fovy,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>aspectRatio,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zNear,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zFar)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="896"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>right<sp/><sp/>=<sp/><sp/>0.0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>left<sp/><sp/><sp/>=<sp/><sp/>0.0;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>top<sp/><sp/><sp/><sp/>=<sp/><sp/>0.0;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/><sp/>0.0;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classof_matrix4x4_1aa191919c9afb4ac6091bd0febf9d34e7" kindref="member">getFrustum</ref>(left,right,bottom,top,zNear,zFar))</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fovy<sp/>=<sp/>(atan(top/zNear)-atan(bottom/zNear))*<ref refid="of_constants_8h_1a89e47af0449640d4f15191aba5ca24c6" kindref="member">RAD_TO_DEG</ref>;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aspectRatio<sp/>=<sp/>(right-left)/(top-bottom);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a445763c60b8b41aad437855ecb083084" kindref="member">ofMatrix4x4::makeLookAtViewMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>eye,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>center,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>up)</highlight></codeline>
<codeline lineno="911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>zaxis<sp/>=<sp/>(eye<sp/>-<sp/>center).normalized();</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>xaxis<sp/>=<sp/>up.<ref refid="classof_vec3f_1ac1f9ddfac842007ffa14dfbe3034b6db" kindref="member">getCrossed</ref>(zaxis).<ref refid="classof_vec3f_1a603c4fee6795cab3335be5542633f328" kindref="member">normalized</ref>();</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>yaxis<sp/>=<sp/>zaxis.<ref refid="classof_vec3f_1ac1f9ddfac842007ffa14dfbe3034b6db" kindref="member">getCrossed</ref>(xaxis);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0].<ref refid="classof_vec3f_1ab0fbcc339bab2e81464fbe8de96b46c6" kindref="member">set</ref>(xaxis.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>,<sp/>yaxis.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>,<sp/>zaxis.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1].set(xaxis.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>,<sp/>yaxis.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>,<sp/>zaxis.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2].set(xaxis.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>,<sp/>yaxis.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>,<sp/>zaxis.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[3].set(-xaxis.<ref refid="classof_vec3f_1ade3c568b869e9d83a4c2cc8d102c1c98" kindref="member">dot</ref>(eye),<sp/>-yaxis.<ref refid="classof_vec3f_1ade3c568b869e9d83a4c2cc8d102c1c98" kindref="member">dot</ref>(eye),<sp/>-zaxis.<ref refid="classof_vec3f_1ade3c568b869e9d83a4c2cc8d102c1c98" kindref="member">dot</ref>(eye),<sp/>1);</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a5f55089db1f07aa3a71f162e90c668aa" kindref="member">ofMatrix4x4::makeLookAtMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>eye,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>center,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>up)</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>zaxis<sp/>=<sp/>(eye<sp/>-<sp/>center).normalized();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>xaxis<sp/>=<sp/>up.<ref refid="classof_vec3f_1ac1f9ddfac842007ffa14dfbe3034b6db" kindref="member">getCrossed</ref>(zaxis).<ref refid="classof_vec3f_1a603c4fee6795cab3335be5542633f328" kindref="member">normalized</ref>();</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref><sp/>yaxis<sp/>=<sp/>zaxis.<ref refid="classof_vec3f_1ac1f9ddfac842007ffa14dfbe3034b6db" kindref="member">getCrossed</ref>(xaxis);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[0].<ref refid="classof_vec3f_1ab0fbcc339bab2e81464fbe8de96b46c6" kindref="member">set</ref>(xaxis.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>,<sp/>xaxis.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>,<sp/>xaxis.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[1].set(yaxis.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>,<sp/>yaxis.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>,<sp/>yaxis.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[2].set(zaxis.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>,<sp/>zaxis.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref>,<sp/>zaxis.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mat[3]<sp/>=<sp/>eye;</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1ad801b4c6615433196a95f6ee3bdae5db" kindref="member">ofMatrix4x4::getLookAt</ref>(<ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>eye,<ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>center,<ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>up,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lookDistance)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="935"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classof_matrix4x4" kindref="compound">ofMatrix4x4</ref><sp/>inv;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>inv.<ref refid="classof_matrix4x4_1a443f5350825e494808bad13c31eeb88b" kindref="member">makeInvertOf</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>eye<sp/>=<sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>(0.0,0.0,0.0)*inv;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>up<sp/>=<sp/><ref refid="classof_matrix4x4_1ac79426c2367b4beea62355e35c2152e2" kindref="member">transform3x3</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>(0.0,1.0,0.0));</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>center<sp/>=<sp/><ref refid="classof_matrix4x4_1ac79426c2367b4beea62355e35c2152e2" kindref="member">transform3x3</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>(0.0,0.0,-1));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>center.<ref refid="classof_vec3f_1a878f3aee3675df4b81ac0f9c42ebc609" kindref="member">normalize</ref>();</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>center<sp/>=<sp/>eye<sp/>+<sp/>center*lookDistance;</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="of_matrix4x4_8cpp_1a1000bcdb97681831922d22d72246f25e" kindref="member">HVect</ref>;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a3e3d8a5e783c057cd812c24941af0455" kindref="member">_HMatrix</ref>[4][4];</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal">{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec4f" kindref="compound">ofVec4f</ref><sp/>t;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translation<sp/>Component;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Essential<sp/>Rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>u;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Stretch<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HVect<sp/>k;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Sign<sp/>of<sp/>determinant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sign<sp/>of<sp/>determinant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal">}<sp/>_affineParts;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6" kindref="member">QuatPart</ref><sp/>{<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>,<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>,<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>,<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>};</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SQRTHALF<sp/>(0.7071067811865475244)</highlight></codeline>
<codeline lineno="962"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qxtoz(0,<ref refid="of_matrix4x4_8cpp_1abc0d7ca08089f78a080423c15de6c2fa" kindref="member">SQRTHALF</ref>,0,<ref refid="of_matrix4x4_8cpp_1abc0d7ca08089f78a080423c15de6c2fa" kindref="member">SQRTHALF</ref>);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qytoz(<ref refid="of_matrix4x4_8cpp_1abc0d7ca08089f78a080423c15de6c2fa" kindref="member">SQRTHALF</ref>,0,0,<ref refid="of_matrix4x4_8cpp_1abc0d7ca08089f78a080423c15de6c2fa" kindref="member">SQRTHALF</ref>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qppmm(<sp/>0.5,<sp/>0.5,-0.5,-0.5);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qpppp(<sp/>0.5,<sp/>0.5,<sp/>0.5,<sp/>0.5);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qmpmm(-0.5,<sp/>0.5,-0.5,-0.5);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qpppm(<sp/>0.5,<sp/>0.5,<sp/>0.5,-0.5);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q0001(<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q1000(<sp/>1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="preprocessor">#define<sp/>matrixCopy(C,<sp/>gets,<sp/>A,<sp/>n)<sp/>{int<sp/>i,<sp/>j;<sp/>for<sp/>(i=0;i&lt;n;i++)<sp/>for<sp/>(j=0;j&lt;n;j++)\</highlight></codeline>
<codeline lineno="973"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>C[i][j]<sp/>gets<sp/>(A[i][j]);}</highlight></codeline>
<codeline lineno="974"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="976"><highlight class="preprocessor">#define<sp/>mat_tpose(AT,gets,A,n)<sp/>{int<sp/>i,j;<sp/>for(i=0;i&lt;n;i++)<sp/>for(j=0;j&lt;n;j++)\</highlight></codeline>
<codeline lineno="977"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AT[i][j]<sp/>gets<sp/>(A[j][i]);}</highlight></codeline>
<codeline lineno="978"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="980"><highlight class="preprocessor">#define<sp/>mat_pad(A)<sp/>(A[W][X]=A[X][W]=A[W][Y]=A[Y][W]=A[W][Z]=A[Z][W]=0,A[W][W]=1)</highlight></codeline>
<codeline lineno="981"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="preprocessor">#define<sp/>matBinop(C,gets,A,op,B,n)<sp/>{int<sp/>i,j;<sp/>for(i=0;i&lt;n;i++)<sp/>for(j=0;j&lt;n;j++)\</highlight></codeline>
<codeline lineno="985"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>C[i][j]<sp/>gets<sp/>(A[i][j])<sp/>op<sp/>(B[i][j]);}</highlight></codeline>
<codeline lineno="986"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="988"><highlight class="preprocessor">#define<sp/>mat_copy(C,gets,A,n)<sp/>{int<sp/>i,j;<sp/>for(i=0;i&lt;n;i++)<sp/>for(j=0;j&lt;n;j++)\</highlight></codeline>
<codeline lineno="989"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>C[i][j]<sp/>gets<sp/>(A[i][j]);}</highlight></codeline>
<codeline lineno="990"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="992"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a25ea8fe601108cfe2d90da8076f11d13" kindref="member">mat_mult</ref>(_HMatrix<sp/>A,<sp/>_HMatrix<sp/>B,<sp/>_HMatrix<sp/>AB)</highlight></codeline>
<codeline lineno="993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;3;<sp/>i++)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AB[i][j]<sp/>=<sp/>A[i][0]*B[0][j]<sp/>+<sp/>A[i][1]*B[1][j]<sp/>+<sp/>A[i][2]*B[2][j];</highlight></codeline>
<codeline lineno="997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a1e3560a61f1dd58846ef472689db51fb" kindref="member">mat_norm</ref>(_HMatrix<sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tpose)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum,<sp/>max;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpose)<sp/>sum<sp/>=<sp/>fabs(M[0][i])+fabs(M[1][i])+fabs(M[2][i]);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>fabs(M[i][0])+fabs(M[i][1])+fabs(M[i][2]);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max&lt;sum)<sp/>max<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a4ca81ec6c69c763ea25ffe7130ee2513" kindref="member">norm_inf</ref>(_HMatrix<sp/>M)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a1e3560a61f1dd58846ef472689db51fb" kindref="member">mat_norm</ref>(M,<sp/>0);}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a5bb000e90bf85938a386155927a1dbe1" kindref="member">norm_one</ref>(_HMatrix<sp/>M)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a1e3560a61f1dd58846ef472689db51fb" kindref="member">mat_norm</ref>(M,<sp/>1);}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>_HMatrix<sp/>mat_id<sp/>=<sp/>{{1,0,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,1}};</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a87dcf4daf6a0d41ca6c3346e9af2e6c9" kindref="member">find_max_col</ref>(_HMatrix<sp/>M)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>abs,<sp/>max;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>col;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>0.0;<sp/>col<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;3;<sp/>i++)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs<sp/>=<sp/>M[i][j];<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs&lt;0.0)<sp/>abs<sp/>=<sp/>-abs;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs&gt;max)<sp/>{max<sp/>=<sp/>abs;<sp/>col<sp/>=<sp/>j;}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>col;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1ad2b168b24c236bd56e5b2c6487b9c9ac" kindref="member">vcross</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*va,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*vb,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*v)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>v[0]<sp/>=<sp/>va[1]*vb[2]<sp/>-<sp/>va[2]*vb[1];</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>v[1]<sp/>=<sp/>va[2]*vb[0]<sp/>-<sp/>va[0]*vb[2];</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>v[2]<sp/>=<sp/>va[0]*vb[1]<sp/>-<sp/>va[1]*vb[0];</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a21e03864a3b2b737d198703aed86974c" kindref="member">vdot</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*va,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*vb)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(va[0]*vb[0]<sp/>+<sp/>va[1]*vb[1]<sp/>+<sp/>va[2]*vb[2]);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a45fedd24f53f02d960ab1690e8fe98dd" kindref="member">adjoint_transpose</ref>(_HMatrix<sp/>M,<sp/>_HMatrix<sp/>MadjT)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ad2b168b24c236bd56e5b2c6487b9c9ac" kindref="member">vcross</ref>(M[1],<sp/>M[2],<sp/>MadjT[0]);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ad2b168b24c236bd56e5b2c6487b9c9ac" kindref="member">vcross</ref>(M[2],<sp/>M[0],<sp/>MadjT[1]);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ad2b168b24c236bd56e5b2c6487b9c9ac" kindref="member">vcross</ref>(M[0],<sp/>M[1],<sp/>MadjT[2]);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1ac680603d21d57625509d620e83557578" kindref="member">make_reflector</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*u)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sqrt(<ref refid="of_matrix4x4_8cpp_1a21e03864a3b2b737d198703aed86974c" kindref="member">vdot</ref>(v,<sp/>v));</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>u[0]<sp/>=<sp/>v[0];<sp/>u[1]<sp/>=<sp/>v[1];</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>u[2]<sp/>=<sp/>v[2]<sp/>+<sp/>((v[2]&lt;0.0)<sp/>?<sp/>-s<sp/>:<sp/>s);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sqrt(2.0/<ref refid="of_matrix4x4_8cpp_1a21e03864a3b2b737d198703aed86974c" kindref="member">vdot</ref>(u,<sp/>u));</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>u[0]<sp/>=<sp/>u[0]*s;<sp/>u[1]<sp/>=<sp/>u[1]*s;<sp/>u[2]<sp/>=<sp/>u[2]*s;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1afe114125dd33e70819681be67106fe3e" kindref="member">reflect_cols</ref>(_HMatrix<sp/>M,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*u)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>u[0]*M[0][i]<sp/>+<sp/>u[1]*M[1][i]<sp/>+<sp/>u[2]*M[2][i];</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)<sp/>M[j][i]<sp/>-=<sp/>u[j]*s;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a1b40bdbbdb0987023bea17d9d20d5c69" kindref="member">reflect_rows</ref>(_HMatrix<sp/>M,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*u)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a21e03864a3b2b737d198703aed86974c" kindref="member">vdot</ref>(u,<sp/>M[i]);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)<sp/>M[i][j]<sp/>-=<sp/>u[j]*s;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1ac0861013e63b003e1fecc2c0d78ee609" kindref="member">do_rank1</ref>(_HMatrix<sp/>M,<sp/>_HMatrix<sp/>Q)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v1[3],<sp/>v2[3],<sp/>s;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a0eb958b865b3083981030654274ce09e" kindref="member">mat_copy</ref>(Q,=,mat_id,4);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>rank(M)<sp/>is<sp/>1,<sp/>we<sp/>should<sp/>find<sp/>a<sp/>non-zero<sp/>column<sp/>in<sp/>M<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>col<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a87dcf4daf6a0d41ca6c3346e9af2e6c9" kindref="member">find_max_col</ref>(M);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col&lt;0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Rank<sp/>is<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>v1[0]<sp/>=<sp/>M[0][col];<sp/>v1[1]<sp/>=<sp/>M[1][col];<sp/>v1[2]<sp/>=<sp/>M[2][col];</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ac680603d21d57625509d620e83557578" kindref="member">make_reflector</ref>(v1,<sp/>v1);<sp/><ref refid="of_matrix4x4_8cpp_1afe114125dd33e70819681be67106fe3e" kindref="member">reflect_cols</ref>(M,<sp/>v1);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>v2[0]<sp/>=<sp/>M[2][0];<sp/>v2[1]<sp/>=<sp/>M[2][1];<sp/>v2[2]<sp/>=<sp/>M[2][2];</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ac680603d21d57625509d620e83557578" kindref="member">make_reflector</ref>(v2,<sp/>v2);<sp/><ref refid="of_matrix4x4_8cpp_1a1b40bdbbdb0987023bea17d9d20d5c69" kindref="member">reflect_rows</ref>(M,<sp/>v2);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>M[2][2];</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s&lt;0.0)<sp/>Q[2][2]<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1afe114125dd33e70819681be67106fe3e" kindref="member">reflect_cols</ref>(Q,<sp/>v1);<sp/><ref refid="of_matrix4x4_8cpp_1a1b40bdbbdb0987023bea17d9d20d5c69" kindref="member">reflect_rows</ref>(Q,<sp/>v2);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1ae82f43992fdaba27dc9a521e12e56156" kindref="member">do_rank2</ref>(_HMatrix<sp/>M,<sp/>_HMatrix<sp/>MadjT,<sp/>_HMatrix<sp/>Q)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v1[3],<sp/>v2[3];</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w,<sp/>x,<sp/>y,<sp/>z,<sp/><ref refid="of_matrix4x4_8cpp_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>s,<sp/><ref refid="of_polyline_8cpp_1ae629cf86d3fc5a1280de48f9c0efeb13" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>rank(M)<sp/>is<sp/>2,<sp/>we<sp/>should<sp/>find<sp/>a<sp/>non-zero<sp/>column<sp/>in<sp/>MadjT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>col<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a87dcf4daf6a0d41ca6c3346e9af2e6c9" kindref="member">find_max_col</ref>(MadjT);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col&lt;0)<sp/>{<ref refid="of_matrix4x4_8cpp_1ac0861013e63b003e1fecc2c0d78ee609" kindref="member">do_rank1</ref>(M,<sp/>Q);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}<sp/></highlight><highlight class="comment">/*<sp/>Rank&lt;2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>v1[0]<sp/>=<sp/>MadjT[0][col];<sp/>v1[1]<sp/>=<sp/>MadjT[1][col];<sp/>v1[2]<sp/>=<sp/>MadjT[2][col];</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ac680603d21d57625509d620e83557578" kindref="member">make_reflector</ref>(v1,<sp/>v1);<sp/><ref refid="of_matrix4x4_8cpp_1afe114125dd33e70819681be67106fe3e" kindref="member">reflect_cols</ref>(M,<sp/>v1);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ad2b168b24c236bd56e5b2c6487b9c9ac" kindref="member">vcross</ref>(M[0],<sp/>M[1],<sp/>v2);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ac680603d21d57625509d620e83557578" kindref="member">make_reflector</ref>(v2,<sp/>v2);<sp/><ref refid="of_matrix4x4_8cpp_1a1b40bdbbdb0987023bea17d9d20d5c69" kindref="member">reflect_rows</ref>(M,<sp/>v2);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>M[0][0];<sp/>x<sp/>=<sp/>M[0][1];<sp/>y<sp/>=<sp/>M[1][0];<sp/>z<sp/>=<sp/>M[1][1];</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w*z&gt;x*y)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>z+w;<sp/>s<sp/>=<sp/>y-x;<sp/>d<sp/>=<sp/>sqrt(c*c+s*s);<sp/>c<sp/>=<sp/>c/d;<sp/>s<sp/>=<sp/>s/d;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[0][0]<sp/>=<sp/>Q[1][1]<sp/>=<sp/>c;<sp/>Q[0][1]<sp/>=<sp/>-(Q[1][0]<sp/>=<sp/>s);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>z-w;<sp/>s<sp/>=<sp/>y+x;<sp/>d<sp/>=<sp/>sqrt(c*c+s*s);<sp/>c<sp/>=<sp/>c/d;<sp/>s<sp/>=<sp/>s/d;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[0][0]<sp/>=<sp/>-(Q[1][1]<sp/>=<sp/>c);<sp/>Q[0][1]<sp/>=<sp/>Q[1][0]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>Q[0][2]<sp/>=<sp/>Q[2][0]<sp/>=<sp/>Q[1][2]<sp/>=<sp/>Q[2][1]<sp/>=<sp/>0.0;<sp/>Q[2][2]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1afe114125dd33e70819681be67106fe3e" kindref="member">reflect_cols</ref>(Q,<sp/>v1);<sp/><ref refid="of_matrix4x4_8cpp_1a1b40bdbbdb0987023bea17d9d20d5c69" kindref="member">reflect_rows</ref>(Q,<sp/>v2);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>product<sp/>of<sp/>quaternion<sp/>q<sp/>by<sp/>scalar<sp/>w.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="of_matrix4x4_8cpp_1a0ca80a961f3aadf0677ae858482d964b" kindref="member">Qt_Scale</ref>(<ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qq;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>=<sp/>q.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()*w;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>=<sp/>q.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()*w;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>=<sp/>q.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()*w;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>=<sp/>q.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()*w;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(qq);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>unit<sp/>quaternion<sp/>from<sp/>rotation<sp/>matrix.<sp/><sp/>Assumes<sp/>matrix<sp/>is</highlight></codeline>
<codeline lineno="1137"><highlight class="comment">*<sp/>used<sp/>to<sp/>multiply<sp/>column<sp/>vector<sp/>on<sp/>the<sp/>left:<sp/>vnew<sp/>=<sp/>mat<sp/>vold.<sp/><sp/>Works</highlight></codeline>
<codeline lineno="1138"><highlight class="comment">*<sp/>correctly<sp/>for<sp/>right-handed<sp/>coordinate<sp/>system<sp/>and<sp/>right-handed<sp/>rotations.</highlight></codeline>
<codeline lineno="1139"><highlight class="comment">*<sp/>Translation<sp/>and<sp/>perspective<sp/>components<sp/>ignored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="of_matrix4x4_8cpp_1a4ec8fdbd98d97ef8a78991a6dcf2cb3f" kindref="member">quatFromMatrix</ref>(_HMatrix<sp/>mat)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>algorithm<sp/>avoids<sp/>near-zero<sp/>divides<sp/>by<sp/>looking<sp/>for<sp/>a<sp/>large<sp/>component</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>-<sp/>first<sp/>w,<sp/>then<sp/>x,<sp/>y,<sp/>or<sp/>z.<sp/><sp/>When<sp/>the<sp/>trace<sp/>is<sp/>greater<sp/>than<sp/>zero,</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>|w|<sp/>is<sp/>greater<sp/>than<sp/>1/2,<sp/>which<sp/>is<sp/>as<sp/>small<sp/>as<sp/>a<sp/>largest<sp/>component<sp/>can<sp/>be.</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Otherwise,<sp/>the<sp/>largest<sp/>diagonal<sp/>entry<sp/>corresponds<sp/>to<sp/>the<sp/>largest<sp/>of<sp/>|x|,</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>|y|,<sp/>or<sp/>|z|,<sp/>one<sp/>of<sp/>which<sp/>must<sp/>be<sp/>larger<sp/>than<sp/>|w|,<sp/>and<sp/>at<sp/>least<sp/>1/2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qu<sp/>=<sp/>q0001;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tr,<sp/>s;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/>tr<sp/>=<sp/>mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>]<sp/>+<sp/>mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>]+<sp/>mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>];</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tr<sp/>&gt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sqrt(tr<sp/>+<sp/>mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>]);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qu.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>=<sp/>s*0.5;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0.5<sp/>/<sp/>s;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qu.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>=<sp/>(mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>]<sp/>-<sp/>mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qu.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>=<sp/>(mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>]<sp/>-<sp/>mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qu.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>=<sp/>(mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>]<sp/>-<sp/>mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>])<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>]<sp/>&gt;<sp/>mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>])<sp/>h<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>]<sp/>&gt;<sp/>mat[h][h])<sp/>h<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(h)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>caseMacro(i,j,k,I,J,K)<sp/>\</highlight></codeline>
<codeline lineno="1168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>I:\</highlight></codeline>
<codeline lineno="1169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sqrt(<sp/>(mat[I][I]<sp/>-<sp/>(mat[J][J]+mat[K][K]))<sp/>+<sp/>mat[W][W]<sp/>);\</highlight></codeline>
<codeline lineno="1170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qu.i()<sp/>=<sp/>s*0.5;\</highlight></codeline>
<codeline lineno="1171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0.5<sp/>/<sp/>s;\</highlight></codeline>
<codeline lineno="1172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qu.j()<sp/>=<sp/>(mat[I][J]<sp/>+<sp/>mat[J][I])<sp/>*<sp/>s;\</highlight></codeline>
<codeline lineno="1173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qu.k()<sp/>=<sp/>(mat[K][I]<sp/>+<sp/>mat[I][K])<sp/>*<sp/>s;\</highlight></codeline>
<codeline lineno="1174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qu.w()<sp/>=<sp/>(mat[K][J]<sp/>-<sp/>mat[J][K])<sp/>*<sp/>s;\</highlight></codeline>
<codeline lineno="1175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break</highlight></codeline>
<codeline lineno="1176"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a680c8bc94fb11bd684b4edab2d6e48d3" kindref="member">caseMacro</ref>(x,y,z,X,<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>,<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a680c8bc94fb11bd684b4edab2d6e48d3" kindref="member">caseMacro</ref>(y,z,x,<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>,<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>,X);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a680c8bc94fb11bd684b4edab2d6e48d3" kindref="member">caseMacro</ref>(z,x,y,<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>,X,<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>]<sp/>!=<sp/>1.0)<sp/>qu<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a0ca80a961f3aadf0677ae858482d964b" kindref="member">Qt_Scale</ref>(qu,<sp/>1/sqrt(mat[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>]));</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(qu);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="comment">/*******<sp/>Polar<sp/>Decomposition<sp/>*******/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Polar<sp/>Decomposition<sp/>of<sp/>3x3<sp/>matrix<sp/>in<sp/>4x4,</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/>*<sp/>M<sp/>=<sp/>QS.<sp/><sp/>See<sp/>Nicholas<sp/>Higham<sp/>and<sp/>Robert<sp/>S.<sp/>Schreiber,</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/>*<sp/>Fast<sp/>Polar<sp/>Decomposition<sp/>of<sp/>An<sp/>Arbitrary<sp/>Matrix,</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/>*<sp/>Technical<sp/>Report<sp/>88-942,<sp/>October<sp/>1988,</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"><sp/>*<sp/>Department<sp/>of<sp/>Computer<sp/>Science,<sp/>Cornell<sp/>University.</highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1af130c2c87ac7672da2322e57c5eed993" kindref="member">polarDecomp</ref>(<sp/>_HMatrix<sp/>M,<sp/>_HMatrix<sp/>Q,<sp/>_HMatrix<sp/>S)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOL<sp/>1.0e-6</highlight></codeline>
<codeline lineno="1198"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_HMatrix<sp/>Mk,<sp/>MadjTk,<sp/>Ek;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det,<sp/>M_one,<sp/>M_inf,<sp/>MadjT_one,<sp/>MadjT_inf,<sp/>E_one,<sp/>gamma,<sp/>g1,<sp/>g2;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a14951b3900fb3530b2f9d2752443d3f2" kindref="member">mat_tpose</ref>(Mk,=,M,3);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_one<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a5bb000e90bf85938a386155927a1dbe1" kindref="member">norm_one</ref>(Mk);<sp/><sp/>M_inf<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4ca81ec6c69c763ea25ffe7130ee2513" kindref="member">norm_inf</ref>(Mk);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a45fedd24f53f02d960ab1690e8fe98dd" kindref="member">adjoint_transpose</ref>(Mk,<sp/>MadjTk);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a21e03864a3b2b737d198703aed86974c" kindref="member">vdot</ref>(Mk[0],<sp/>MadjTk[0]);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(det==0.0)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1ae82f43992fdaba27dc9a521e12e56156" kindref="member">do_rank2</ref>(Mk,<sp/>MadjTk,<sp/>Mk);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MadjT_one<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a5bb000e90bf85938a386155927a1dbe1" kindref="member">norm_one</ref>(MadjTk);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MadjT_inf<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4ca81ec6c69c763ea25ffe7130ee2513" kindref="member">norm_inf</ref>(MadjTk);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>sqrt(sqrt((MadjT_one*MadjT_inf)/(M_one*M_inf))/fabs(det));</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g1<sp/>=<sp/>gamma*0.5;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g2<sp/>=<sp/>0.5/(gamma*det);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5e05441d6283d0ca4b85aba0017aab18" kindref="member">matrixCopy</ref>(Ek,=,Mk,3);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a6be67e7073486170ee67171891dd5181" kindref="member">matBinop</ref>(Mk,=,g1*Mk,+,g2*MadjTk,3);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a0eb958b865b3083981030654274ce09e" kindref="member">mat_copy</ref>(Ek,-=,Mk,3);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_one<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a5bb000e90bf85938a386155927a1dbe1" kindref="member">norm_one</ref>(Ek);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_one<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a5bb000e90bf85938a386155927a1dbe1" kindref="member">norm_one</ref>(Mk);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_inf<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4ca81ec6c69c763ea25ffe7130ee2513" kindref="member">norm_inf</ref>(Mk);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(E_one&gt;(M_one*TOL));</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a14951b3900fb3530b2f9d2752443d3f2" kindref="member">mat_tpose</ref>(Q,=,Mk,3);<sp/><ref refid="of_matrix4x4_8cpp_1a6e77b46d645e6a6866c3260d7389976a" kindref="member">mat_pad</ref>(Q);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a25ea8fe601108cfe2d90da8076f11d13" kindref="member">mat_mult</ref>(Mk,<sp/>M,<sp/>S);<sp/><sp/><ref refid="of_matrix4x4_8cpp_1a6e77b46d645e6a6866c3260d7389976a" kindref="member">mat_pad</ref>(S);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;3;<sp/>i++)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=i;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S[i][j]<sp/>=<sp/>S[j][i]<sp/>=<sp/>0.5*(S[i][j]+S[j][i]);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(det);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">/*******<sp/>Spectral<sp/>Decomposition<sp/>*******/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>spectral<sp/>decomposition<sp/>of<sp/>symmetric<sp/>positive<sp/>semi-definite<sp/>S.</highlight></codeline>
<codeline lineno="1241"><highlight class="comment">*<sp/>Returns<sp/>rotation<sp/>in<sp/>U<sp/>and<sp/>scale<sp/>factors<sp/>in<sp/>result,<sp/>so<sp/>that<sp/>if<sp/>K<sp/>is<sp/>a<sp/>diagonal</highlight></codeline>
<codeline lineno="1242"><highlight class="comment">*<sp/>matrix<sp/>of<sp/>the<sp/>scale<sp/>factors,<sp/>then<sp/>S<sp/>=<sp/>U<sp/>K<sp/>(U<sp/>transpose).<sp/>Uses<sp/>Jacobi<sp/>method.</highlight></codeline>
<codeline lineno="1243"><highlight class="comment">*<sp/>See<sp/>Gene<sp/>H.<sp/>Golub<sp/>and<sp/>Charles<sp/>F.<sp/>Van<sp/>Loan.<sp/>Matrix<sp/>Computations.<sp/>Hopkins<sp/>1983.</highlight></codeline>
<codeline lineno="1244"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal">HVect<sp/><ref refid="of_matrix4x4_8cpp_1af0a56e1aca0a85da6cf609a436faa053" kindref="member">spectDecomp</ref>(_HMatrix<sp/>S,<sp/>_HMatrix<sp/>U)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/>HVect<sp/>kv;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Diag[3],OffD[3];<sp/></highlight><highlight class="comment">/*<sp/>OffD<sp/>is<sp/>off-diag<sp/>(by<sp/>omitted<sp/>index)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g,h,fabsh,fabsOffDi,t,theta,c,s,tau,ta,OffDq,a,<ref refid="of_matrix4x4_8cpp_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nxt[]<sp/>=<sp/>{<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>,<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>,X};</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sweep,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a0eb958b865b3083981030654274ce09e" kindref="member">mat_copy</ref>(U,=,mat_id,4);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/>Diag[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>]<sp/>=<sp/>S[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>];<sp/>Diag[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>]<sp/>=<sp/>S[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>];<sp/>Diag[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>]<sp/>=<sp/>S[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>];</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/>OffD[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>]<sp/>=<sp/>S[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>];<sp/>OffD[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>]<sp/>=<sp/>S[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>];<sp/>OffD[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>]<sp/>=<sp/>S[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>];</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sweep=20;<sp/>sweep&gt;0;<sp/>sweep--)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sm<sp/>=<sp/>fabs(OffD[X])+fabs(OffD[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>])+fabs(OffD[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>]);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm==0.0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>;<sp/>i&gt;=<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>nxt[i];<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>nxt[p];</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsOffDi<sp/>=<sp/>fabs(OffD[i]);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>100.0*fabsOffDi;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabsOffDi&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>Diag[q]<sp/>-<sp/>Diag[p];</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsh<sp/>=<sp/>fabs(h);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabsh+g==fabsh)<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>OffD[i]/h;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>0.5*h/OffD[i];</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>1.0/(fabs(theta)+sqrt(theta*theta+1.0));</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theta&lt;0.0)<sp/>t<sp/>=<sp/>-t;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>1.0/sqrt(t*t+1.0);<sp/>s<sp/>=<sp/>t*c;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau<sp/>=<sp/>s/(c+1.0);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta<sp/>=<sp/>t*OffD[i];<sp/>OffD[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Diag[p]<sp/>-=<sp/>ta;<sp/>Diag[q]<sp/>+=<sp/>ta;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffDq<sp/>=<sp/>OffD[q];</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffD[q]<sp/>-=<sp/>s*(OffD[p]<sp/>+<sp/>tau*OffD[q]);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffD[p]<sp/>+=<sp/>s*(OffDq<sp/><sp/><sp/>-<sp/>tau*OffD[p]);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>;<sp/>j&gt;=<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>;<sp/>j--)<sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>U[j][p];<sp/>b<sp/>=<sp/>U[j][q];</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[j][p]<sp/>-=<sp/>s*(b<sp/>+<sp/>tau*a);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[j][q]<sp/>+=<sp/>s*(a<sp/>-<sp/>tau*b);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/>kv.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>=<sp/>Diag[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>];<sp/>kv.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>=<sp/>Diag[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>];<sp/>kv.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>=<sp/>Diag[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>];<sp/>kv.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(kv);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>conjugate<sp/>of<sp/>quaternion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="of_matrix4x4_8cpp_1a21ba8a5cb17f808261f8705ce309f781" kindref="member">Qt_Conj</ref>(<ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qq;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>=<sp/>-q.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>();<sp/>qq.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>=<sp/>-q.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>();<sp/>qq.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>=<sp/>-q.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>();<sp/>qq.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>=<sp/>q.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>();</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(qq);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>quaternion<sp/>product<sp/>qL<sp/>*<sp/>qR.<sp/><sp/>Note:<sp/>order<sp/>is<sp/>important!</highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/>*<sp/>To<sp/>combine<sp/>rotations,<sp/>use<sp/>the<sp/>product<sp/>Mul(qSecond,<sp/>qFirst),</highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/>*<sp/>which<sp/>gives<sp/>the<sp/>effect<sp/>of<sp/>rotating<sp/>by<sp/>qFirst<sp/>then<sp/>qSecond.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="of_matrix4x4_8cpp_1a56e5fafee6d70b5e65499aee11e770ab" kindref="member">Qt_Mul</ref>(<ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qL,<sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qR)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qq;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>=<sp/>qL.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()*qR.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>-<sp/>qL.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()*qR.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>-<sp/>qL.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()*qR.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>-<sp/>qL.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()*qR.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>();</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>=<sp/>qL.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()*qR.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>+<sp/>qL.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()*qR.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>+<sp/>qL.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()*qR.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>-<sp/>qL.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()*qR.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>();</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>=<sp/>qL.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()*qR.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>+<sp/>qL.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()*qR.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>+<sp/>qL.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()*qR.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>-<sp/>qL.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()*qR.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>();</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>=<sp/>qL.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()*qR.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>+<sp/>qL.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()*qR.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>+<sp/>qL.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()*qR.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>-<sp/>qL.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()*qR.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(qq);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Construct<sp/>a<sp/>(possibly<sp/>non-unit)<sp/>quaternion<sp/>from<sp/>real<sp/>components.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="of_matrix4x4_8cpp_1a4267bdb21e909bbb0c6fed616c06c2e9" kindref="member">Qt_</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qq;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>qq.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>=<sp/>x;<sp/>qq.<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>=<sp/>y;<sp/>qq.<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>=<sp/>z;<sp/>qq.<ref refid="classof_quaternion_1a80b8ab68425afe5180bd3e8de747d636" kindref="member">w</ref>()<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(qq);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="comment">/*******<sp/>Spectral<sp/>Axis<sp/>Adjustment<sp/>*******/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Given<sp/>a<sp/>unit<sp/>quaternion,<sp/>q,<sp/>and<sp/>a<sp/>scale<sp/>vector,<sp/>k,<sp/>find<sp/>a<sp/>unit<sp/>quaternion,<sp/>p,</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/>*<sp/>which<sp/>permutes<sp/>the<sp/>axes<sp/>and<sp/>turns<sp/>freely<sp/>in<sp/>the<sp/>plane<sp/>of<sp/>duplicate<sp/>scale</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/>*<sp/>factors,<sp/>such<sp/>that<sp/>q<sp/>p<sp/>has<sp/>the<sp/>largest<sp/>possible<sp/>w<sp/>component,<sp/>i.e.<sp/>the</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/>*<sp/>smallest<sp/>possible<sp/>angle.<sp/>Permutes<sp/>k&apos;s<sp/>components<sp/>to<sp/>go<sp/>with<sp/>q<sp/>p<sp/>instead<sp/>of<sp/>q.</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/>*<sp/>See<sp/>Ken<sp/>Shoemake<sp/>and<sp/>Tom<sp/>Duff.<sp/>Matrix<sp/>Animation<sp/>and<sp/>Polar<sp/>Decomposition.</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/>*<sp/>Proceedings<sp/>of<sp/>Graphics<sp/>Interface<sp/>1992.<sp/>Details<sp/>on<sp/>p.<sp/>262-263.</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/><ref refid="of_matrix4x4_8cpp_1a8e67ff3f025e3763ac3515e2d9b93c3e" kindref="member">snuggle</ref>(<ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>q,<sp/>HVect<sp/>*k)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sgn(n,v)<sp/><sp/><sp/><sp/>((n)?-(v):(v))</highlight></codeline>
<codeline lineno="1332"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>swap(a,i,j)<sp/>{a[3]=a[i];<sp/>a[i]=a[j];<sp/>a[j]=a[3];}</highlight></codeline>
<codeline lineno="1333"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>cycle(a,p)<sp/><sp/>if<sp/>(p)<sp/>{a[3]=a[0];<sp/>a[0]=a[1];<sp/>a[1]=a[2];<sp/>a[2]=a[3];}\</highlight></codeline>
<codeline lineno="1334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/>{a[3]=a[2];<sp/>a[2]=a[1];<sp/>a[1]=a[0];<sp/>a[0]=a[3];}</highlight></codeline>
<codeline lineno="1335"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>p<sp/>=<sp/>q0001;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ka[4];</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>turn<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>]<sp/>=<sp/>k-&gt;<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>();<sp/>ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>]<sp/>=<sp/>k-&gt;<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>();<sp/>ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>]<sp/>=<sp/>k-&gt;<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>();</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ka[X]==ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>])<sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ka[X]==ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>])</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>turn<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ka[X]==ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>])</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ka[Y]==ka[Z])</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(turn&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>qtoz,<sp/>qp;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>win;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mag[3],<sp/>t;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(turn)<sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="of_matrix4x4_8cpp_1a21ba8a5cb17f808261f8705ce309f781" kindref="member">Qt_Conj</ref>(q));</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>X:<sp/>q<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a56e5fafee6d70b5e65499aee11e770ab" kindref="member">Qt_Mul</ref>(q,<sp/>qtoz<sp/>=<sp/>qxtoz);<sp/><ref refid="of_matrix4x4_8cpp_1afe418d2ee4c27f9916c687ebe48968bb" kindref="member">swap</ref>(ka,X,Z)<sp/>break;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Y:<sp/>q<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a56e5fafee6d70b5e65499aee11e770ab" kindref="member">Qt_Mul</ref>(q,<sp/>qtoz<sp/>=<sp/>qytoz);<sp/>swap(ka,Y,Z)<sp/>break;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Z:<sp/>qtoz<sp/>=<sp/>q0001;<sp/>break;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a21ba8a5cb17f808261f8705ce309f781" kindref="member">Qt_Conj</ref>(q);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mag[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)q.z()*q.z()+(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)q.w()*q.w()-0.5;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mag[1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)q.x()*q.z()-(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)q.y()*q.w();</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mag[2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)q.y()*q.z()+(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)q.x()*q.w();</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>neg[3];</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i=0;<sp/>i&lt;3;<sp/>i++)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neg[i]<sp/>=<sp/>(mag[i]&lt;0.0);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neg[i])<sp/>mag[i]<sp/>=<sp/>-mag[i];</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mag[0]&gt;mag[1])<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mag[0]&gt;mag[2])</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>win<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mag[1]&gt;mag[2])<sp/>win<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>win<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(win)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neg[0])<sp/>p<sp/>=<sp/>q1000;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>q0001;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neg[1])<sp/>p<sp/>=<sp/>qppmm;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>qpppp;<sp/><ref refid="of_matrix4x4_8cpp_1a439791da41fdc56e3544e3012da5e78b" kindref="member">cycle</ref>(ka,0)<sp/>break;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>2:<sp/>if<sp/>(neg[2])<sp/>p<sp/>=<sp/>qmpmm;<sp/>else<sp/>p<sp/>=<sp/>qpppm;<sp/>cycle(ka,1)<sp/>break;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qp<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a56e5fafee6d70b5e65499aee11e770ab" kindref="member">Qt_Mul</ref>(q,<sp/>p);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>sqrt(mag[win]+0.5);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a56e5fafee6d70b5e65499aee11e770ab" kindref="member">Qt_Mul</ref>(p,<sp/><ref refid="of_matrix4x4_8cpp_1a4267bdb21e909bbb0c6fed616c06c2e9" kindref="member">Qt_</ref>(0.0,0.0,-qp.z()/t,qp.w()/t));</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a56e5fafee6d70b5e65499aee11e770ab" kindref="member">Qt_Mul</ref>(qtoz,<sp/><ref refid="of_matrix4x4_8cpp_1a21ba8a5cb17f808261f8705ce309f781" kindref="member">Qt_Conj</ref>(p));</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qa[4],<sp/>pa[4];</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo,<sp/>hi;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>par<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>neg[4];</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>all,<sp/>big,<sp/>two;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qa[0]<sp/>=<sp/>q.<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>();<sp/>qa[1]<sp/>=<sp/>q.y();<sp/>qa[2]<sp/>=<sp/>q.z();<sp/>qa[3]<sp/>=<sp/>q.w();</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pa[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neg[i]<sp/>=<sp/>(qa[i]&lt;0.0);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neg[i])<sp/>qa[i]<sp/>=<sp/>-qa[i];</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par<sp/>^=<sp/>neg[i];</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>two<sp/>largest<sp/>components,<sp/>indices<sp/>in<sp/>hi<sp/>and<sp/>lo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qa[0]&gt;qa[1])<sp/>lo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qa[2]&gt;qa[3])<sp/>hi<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qa[lo]&gt;qa[hi])<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qa[lo^1]&gt;qa[hi])<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>=<sp/>lo;<sp/>lo<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>^=<sp/>lo;<sp/>lo<sp/>^=<sp/>hi;<sp/>hi<sp/>^=<sp/>lo;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qa[hi^1]&gt;qa[lo])<sp/>lo<sp/>=<sp/>hi^1;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>=<sp/>(qa[0]+qa[1]+qa[2]+qa[3])*0.5;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two<sp/>=<sp/>(qa[hi]+qa[lo])*<ref refid="of_matrix4x4_8cpp_1abc0d7ca08089f78a080423c15de6c2fa" kindref="member">SQRTHALF</ref>;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>big<sp/>=<sp/>qa[hi];</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all&gt;two)<sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all&gt;big)<sp/>{</highlight><highlight class="comment">/*all*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;4;<sp/>i++)<sp/>pa[i]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a455057e8062f0978e7cfc4c88b244c82" kindref="member">sgn</ref>(neg[i],<sp/>0.5);}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a439791da41fdc56e3544e3012da5e78b" kindref="member">cycle</ref>(ka,par);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">/*big*/</highlight><highlight class="normal"><sp/>pa[hi]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a455057e8062f0978e7cfc4c88b244c82" kindref="member">sgn</ref>(neg[hi],1.0);}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(two&gt;big)<sp/>{<sp/></highlight><highlight class="comment">/*two*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pa[hi]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a455057e8062f0978e7cfc4c88b244c82" kindref="member">sgn</ref>(neg[hi],<ref refid="of_matrix4x4_8cpp_1abc0d7ca08089f78a080423c15de6c2fa" kindref="member">SQRTHALF</ref>);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pa[lo]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a455057e8062f0978e7cfc4c88b244c82" kindref="member">sgn</ref>(neg[lo],<sp/><ref refid="of_matrix4x4_8cpp_1abc0d7ca08089f78a080423c15de6c2fa" kindref="member">SQRTHALF</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lo&gt;hi)<sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>^=<sp/>lo;<sp/>lo<sp/>^=<sp/>hi;<sp/>hi<sp/>^=<sp/>lo;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hi==<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\001\002\000&quot;</highlight><highlight class="normal">[lo];</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lo<sp/>=<sp/>3-hi-lo;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1afe418d2ee4c27f9916c687ebe48968bb" kindref="member">swap</ref>(ka,hi,lo);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">/*big*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pa[hi]<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a455057e8062f0978e7cfc4c88b244c82" kindref="member">sgn</ref>(neg[hi],1.0);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.x()<sp/>=<sp/>-pa[0];<sp/>p.y()<sp/>=<sp/>-pa[1];<sp/>p.z()<sp/>=<sp/>-pa[2];<sp/>p.w()<sp/>=<sp/>pa[3];</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k-&gt;<ref refid="classof_quaternion_1aa3730ef64c850701efaff85f0b8461f3" kindref="member">x</ref>()<sp/>=<sp/>ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>];<sp/>k-&gt;<ref refid="classof_quaternion_1a9c8f391cfb5b60171d7d394fcb93ad00" kindref="member">y</ref>()<sp/>=<sp/>ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>];<sp/>k-&gt;<ref refid="classof_quaternion_1a9eb7869157324521ac0c3ff10f299c1b" kindref="member">z</ref>()<sp/>=<sp/>ka[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>];</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="comment">/*******<sp/>Decompose<sp/>Affine<sp/>Matrix<sp/>*******/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Decompose<sp/>4x4<sp/>affine<sp/>matrix<sp/>A<sp/>as<sp/>TFRUK(U<sp/>transpose),<sp/>where<sp/>t<sp/>contains<sp/>the</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*<sp/>translation<sp/>components,<sp/>q<sp/>contains<sp/>the<sp/>rotation<sp/>R,<sp/>u<sp/>contains<sp/>U,<sp/>k<sp/>contains</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/>*<sp/>scale<sp/>factors,<sp/>and<sp/>f<sp/>contains<sp/>the<sp/>sign<sp/>of<sp/>the<sp/>determinant.</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/>*<sp/>Assumes<sp/>A<sp/>transforms<sp/>column<sp/>vectors<sp/>in<sp/>right-handed<sp/>coordinates.</highlight></codeline>
<codeline lineno="1466"><highlight class="comment"><sp/>*<sp/>See<sp/>Ken<sp/>Shoemake<sp/>and<sp/>Tom<sp/>Duff.<sp/>Matrix<sp/>Animation<sp/>and<sp/>Polar<sp/>Decomposition.</highlight></codeline>
<codeline lineno="1467"><highlight class="comment"><sp/>*<sp/>Proceedings<sp/>of<sp/>Graphics<sp/>Interface<sp/>1992.</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="of_matrix4x4_8cpp_1a4753de909467e775a7ae42f2c2256639" kindref="member">decompAffine</ref>(_HMatrix<sp/>A,<sp/>_affineParts<sp/>*<sp/>parts)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_HMatrix<sp/>Q,<sp/>S,<sp/>U;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref><sp/>p;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Translation<sp/>component.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts-&gt;t<sp/>=<sp/><ref refid="classof_vec4f" kindref="compound">ofVec4f</ref>(A[X][<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>],<sp/>A[Y][W],<sp/>A[Z][W],<sp/>0);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1af130c2c87ac7672da2322e57c5eed993" kindref="member">polarDecomp</ref>(A,<sp/>Q,<sp/>S);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(det&lt;0.0)</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a5e05441d6283d0ca4b85aba0017aab18" kindref="member">matrixCopy</ref>(Q,<sp/>=,<sp/>-Q,<sp/>3);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts-&gt;f<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts-&gt;f<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts-&gt;q<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4ec8fdbd98d97ef8a78991a6dcf2cb3f" kindref="member">quatFromMatrix</ref>(Q);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts-&gt;k<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1af0a56e1aca0a85da6cf609a436faa053" kindref="member">spectDecomp</ref>(S,<sp/>U);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts-&gt;u<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a4ec8fdbd98d97ef8a78991a6dcf2cb3f" kindref="member">quatFromMatrix</ref>(U);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a8e67ff3f025e3763ac3515e2d9b93c3e" kindref="member">snuggle</ref>(parts-&gt;u,<sp/>&amp;parts-&gt;k);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts-&gt;u<sp/>=<sp/><ref refid="of_matrix4x4_8cpp_1a56e5fafee6d70b5e65499aee11e770ab" kindref="member">Qt_Mul</ref>(parts-&gt;u,<sp/>p);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classof_matrix4x4_1a5256e32314e5b0a6010ea12b7a8b245e" kindref="member">ofMatrix4x4::decompose</ref>(<sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>t,</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref>&amp;<sp/>r,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_vec3f" kindref="compound">ofVec3f</ref>&amp;<sp/>s,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classof_quaternion" kindref="compound">ofQuaternion</ref>&amp;<sp/>so<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_affineParts<sp/>parts;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>_HMatrix<sp/>hmatrix;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transpose<sp/>copy<sp/>of<sp/>LTW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=0;<sp/>i&lt;4;<sp/>i++)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;4;<sp/>j++)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmatrix[i][j]<sp/>=<sp/>(*this)(j,i);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="of_matrix4x4_8cpp_1a4753de909467e775a7ae42f2c2256639" kindref="member">decompAffine</ref>(hmatrix,<sp/>&amp;parts);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mul<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts.t[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>]<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mul<sp/>=<sp/>1.0<sp/>/<sp/>parts.t[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6ab722ceeb601c72cd78fbd35f3581fdf7" kindref="member">W</ref>];</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>t.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref><sp/>=<sp/>parts.t[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>]<sp/>*<sp/>mul;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>t.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref><sp/>=<sp/>parts.t[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>]<sp/>*<sp/>mul;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>t.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref><sp/>=<sp/>parts.t[<ref refid="of_matrix4x4_8cpp_1a4bf755a23876ecc5d9b3897316b968e6aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>]<sp/>*<sp/>mul;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="classof_quaternion_1aaea1c7238849deac834b9a6396c5017f" kindref="member">set</ref>(parts.q.x(),<sp/>parts.q.y(),<sp/>parts.q.z(),<sp/>parts.q.w());</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>mul<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts.k.w()<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mul<sp/>=<sp/>1.0<sp/>/<sp/>parts.k.w();</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mul<sp/>be<sp/>sign<sp/>of<sp/>determinant<sp/>to<sp/>support<sp/>negative<sp/>scales.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>mul<sp/>*=<sp/>parts.f;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>s.<ref refid="classof_vec3f_1aa69e24cc27cb6dda01d1e4c69e18f682" kindref="member">x</ref>=<sp/>parts.k.x()<sp/>*<sp/>mul;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>s.<ref refid="classof_vec3f_1aa6ae388131850902c9de244d12931f49" kindref="member">y</ref><sp/>=<sp/>parts.k.y()<sp/>*<sp/>mul;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>s.<ref refid="classof_vec3f_1aa6c8d5ae5fdaeb516242aca987ccb9bc" kindref="member">z</ref><sp/>=<sp/>parts.k.z()<sp/>*<sp/>mul;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>so.<ref refid="classof_quaternion_1aaea1c7238849deac834b9a6396c5017f" kindref="member">set</ref>(parts.u.x(),<sp/>parts.u.y(),<sp/>parts.u.z(),<sp/>parts.u.w());</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>SET_ROW</highlight></codeline>
    </programlisting>
    <location file="/home/arturo/Escritorio/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp"/>
  </compounddef>
</doxygen>
